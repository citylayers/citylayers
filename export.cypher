CREATE (n:Project {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.', name: 'Urban Observations 2024', description: 'How can we make future urban interventions more in sync with the \ncitizens‚Äô needs? In what ways can citizens themselves contribute \nto the spatial changes they want to see in their cities?\nDuring Urban Observations city-walks, citizens are invited to use \ntags, textual comments, photographs, suggestions and votes to ar-\nticulate their views on a particular urban surrounding. The partici-\npants can add thoughts on how urban places can be improved, or \nthey can immerse themselves in the information on their urban surroundings mapped by others. As representatives of the KinderUni Technik 2024 and WIENXTRA Volunteer Week 2024, more than 270 school pupils and individuals have taken part in the Urban Observations 2024.\nIts interactive dashboard visualizes urban experiences and turns individual insights into collective, actionable knowledge. By turning the layers of interest on, everyone can receive a real-time and personalized image of their surroundings.', mappable: True, start_date: neo4j.time.DateTime(2024, 6, 1, 18, 41, 28, 142000000, tzinfo=pytz.FixedOffset(60))});
CREATE (n:Config {name: 'Pilot'});
CREATE (n:Question {help: 'üñç Feel free to share any additional observations, opinions and reflections.', value: 'Is there anything else about this place that you particularly liked or disliked?'});
CREATE (n:Answer {atype: 'comment'});
CREATE (n:Question {help: 'Begin by adding a photo of the place you want to share. Then, follow a few steps to share your thoughts about this place with others. Once completed, your contribution will be displayed on the map for everyone to see.', value: 'What do you want to pin to the map?'});
CREATE (n:Answer {atype: 'image'});
CREATE (n:Question {help: 'Beauty reflects how visually appealing and attractive a place is.', value: 'How would you rate the beauty of this space?'});
CREATE (n:Answer {minlabel: 'Unattractive', maxlabel: 'Beautiful', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Which features of beauty are you rating?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Buildings'});
CREATE (n:Answer {atype: 'bool', name: 'Colors'});
CREATE (n:Answer {atype: 'bool', name: 'Street Art'});
CREATE (n:Answer {atype: 'bool', name: 'Landmarks'});
CREATE (n:Answer {atype: 'bool', name: 'Trees'});
CREATE (n:Answer {atype: 'bool', name: 'Plants'});
CREATE (n:Answer {atype: 'bool', name: 'Gardens'});
CREATE (n:Answer {atype: 'bool', name: 'Water'});
CREATE (n:Answer {atype: 'bool', name: 'Cleanliness'});
CREATE (n:Answer {atype: 'bool', name: 'Smell'});
CREATE (n:Question {help: 'Sound refers to the pleasantness of noises in a certain place.', value: 'What do you think of the sounds around you?'});
CREATE (n:Answer {minlabel: 'Unpleasant', maxlabel: 'Pleasant', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Which sounds are you rating?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Water'});
CREATE (n:Answer {atype: 'bool', name: 'Wind'});
CREATE (n:Answer {atype: 'bool', name: 'Animals'});
CREATE (n:Answer {atype: 'bool', name: 'Voices'});
CREATE (n:Answer {atype: 'bool', name: 'Crowds'});
CREATE (n:Answer {atype: 'bool', name: 'Children'});
CREATE (n:Answer {atype: 'bool', name: 'Music'});
CREATE (n:Answer {atype: 'bool', name: 'Crowds'});
CREATE (n:Answer {atype: 'bool', name: 'Construction'});
CREATE (n:Question {help: 'Movement shows how easy and convenient it is to move around an area, whether you are walking, cycling, or using a wheelchair.', value: 'How would you rate the movement around this place?'});
CREATE (n:Answer {minlabel: 'Poor', maxlabel: 'Excellent', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Which aspects of movement are you rating?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Walking'});
CREATE (n:Answer {atype: 'bool', name: 'Cycling'});
CREATE (n:Answer {atype: 'bool', name: 'Wheelchair access'});
CREATE (n:Answer {atype: 'bool', name: 'Benches'});
CREATE (n:Answer {atype: 'bool', name: 'Stairs'});
CREATE (n:Answer {atype: 'bool', name: 'Sidewalks'});
CREATE (n:Answer {atype: 'bool', name: 'Public transport'});
CREATE (n:Answer {atype: 'bool', name: 'Crosswalks'});
CREATE (n:Answer {atype: 'bool', name: 'Wayfinding'});
CREATE (n:Question {help: 'Protection indicates how safe and protected a place is from traffic and other urban hazards.', value: 'How would you rate the protection in this place?'});
CREATE (n:Answer {minlabel: 'Inadequate', maxlabel: 'Adequate', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Which types of protection are you rating?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Cars'});
CREATE (n:Answer {atype: 'bool', name: 'Visibility'});
CREATE (n:Answer {atype: 'bool', name: 'Traffic signs'});
CREATE (n:Answer {atype: 'bool', name: 'Children safety'});
CREATE (n:Answer {atype: 'bool', name: 'Animal safety'});
CREATE (n:Answer {atype: 'bool', name: 'Lighting'});
CREATE (n:Answer {atype: 'bool', name: 'Pavement quality'});
CREATE (n:Answer {atype: 'bool', name: 'Road condition'});
CREATE (n:Answer {atype: 'bool', name: 'Building condition'});
CREATE (n:Question {help: 'Climate comfort reflects how comfortable the climate feels in an area, considering heat, rain cover, wind shelter and more.', value: 'How comfortable do you find the climate here?'});
CREATE (n:Answer {minlabel: 'Uncomfortable', maxlabel: 'Comfortable', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Which types of climate (protection) are you rating?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Heat'});
CREATE (n:Answer {atype: 'bool', name: 'Humidity'});
CREATE (n:Answer {atype: 'bool', name: 'Airflow'});
CREATE (n:Answer {atype: 'bool', name: 'Shade'});
CREATE (n:Answer {atype: 'bool', name: 'Rain cover'});
CREATE (n:Answer {atype: 'bool', name: 'Wind shelter'});
CREATE (n:Question {help: 'Activities represent the usability of a place for the citizens.', value: 'How enjoyable are the available activities in this area?'});
CREATE (n:Answer {minlabel: 'Limited', maxlabel: 'Abundant', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Which activities are you rating?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Sports'});
CREATE (n:Answer {atype: 'bool', name: 'Shopping'});
CREATE (n:Answer {atype: 'bool', name: 'Food'});
CREATE (n:Answer {atype: 'bool', name: 'Dog parks'});
CREATE (n:Answer {atype: 'bool', name: 'Playground'});
CREATE (n:Answer {atype: 'bool', name: 'Relaxation'});
CREATE (n:Answer {atype: 'bool', name: 'Friends meetup'});
CREATE (n:Answer {atype: 'bool', name: 'Coffee'});
CREATE (n:Answer {atype: 'bool', name: 'Toilet'});
CREATE (n:Answer {atype: 'bool', name: 'Drinking water'});
CREATE (n:Answer {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher', min: 0, max: 100, atype: 'range'});
CREATE (n:Role {value: 'researcher'});
CREATE (n:TeamMember {external: False, name: 'Angelos Chronis', link: 'https://iaac.net/dt-team/angelos-chronis/'});
CREATE (n:Role {value: 'tech project manager '});
CREATE (n:TeamMember {external: False, name: 'Androniki Pappa', link: 'www.linkedin.com/in/androniki-pappa'});
CREATE (n:TeamMember {external: True, name: 'Aurel Richard', link: 'https://iaac.net/dt-team/aurel-richard/'});
CREATE (n:Role {value: 'UI/UX'});
CREATE (n:TeamMember {external: False, name: 'Stasja Fedorova', link: 'https://www.linkedin.com/in/stasja-fedorova/'});
CREATE (n:Role {value: 'technical implementation'});
CREATE (n:TeamMember {external: False, name: 'Eveline Wandl-Vogt', link: 'https://www.linkedin.com/in/evelinewandlvogt/'});
CREATE (n:TeamMember {external: False, name: 'Domagoj Krhen', link: 'https://www.linkedin.com/in/domagoj-krhen-676460184/'});
CREATE (n:TeamMember {external: True, name: 'Bilal Alame', link: 'https://archive-2020.biennial.ge/artist/bilal-alame/100'});
CREATE (n:Project {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.', name: 'Mobility Dashboard', description: 'Navigating urban places often poses challenges related to movement, climate comfort, traffic protection, noise, pollution, and more. Based on a scientific approach, our groundbreaking inclusive mobility dashboard translates these challenges into concrete, site-sensitive indicators, or `layers` of urban mobility that the citizens can identify, map, and visualize.\nOur collaborative mapping toolkit goes beyond traditional data-driven approaches, merging the subjective community knowledge with open data to produce meaningful simulations of Vienna¬¥s urban mobility ‚Äì and identify its challenges. These interactive simulations, visualized as heatmaps, measure the (un)favorability of movement in various urban areas, providing a context-specific roadmap for improvement based on collective intelligence. By engaging with citizens, especially those with functional diversity, the elderly, and minors, we aim to bridge knowledge gaps and foster a more inclusive, citizen-centered approach to urban mobility.', mappable: True, start_date: neo4j.time.DateTime(2024, 8, 14, 12, 1, 20, 136000000, tzinfo=pytz.FixedOffset(60))});
CREATE (n:Project {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.', name: 'EU Sparks for Climate', description: "City Layers for Greener Cities is a research-driven initiative that tackles the pressing challenge of incorporating green spaces into urban planning. With projections that 70% of the global population will live in cities by 2050, the availability and quality of urban green spaces are increasingly at risk. Rising temperatures and more frequent heat waves further endanger the livability of urban areas, highlighting the critical need for sustainable interventions. \nBuilding on the City Layers framework, this project introduces a collaborative mapping toolkit to engage citizens in identifying and advocating for green spaces. By gathering data on existing and potential green areas, it provides actionable insights for planners to \npromote sustainable urban development.\nThe participation in the EU Sparks for Climate Hackathon Championship was part of the `Layered City` project, supported by IMPETUS for Citizen Science. IMPETUS is funded by the European Union's Horizon Europe research and innovation programme under grant agreement number 101058677.", mappable: False, start_date: neo4j.time.DateTime(2024, 8, 1, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60))});
CREATE (n:Project {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.', name: 'Citizen Science Award 2023', description: 'Jointly developed with more than 300 individuals, schools classes, and researchers across Austria, the City Layers prototype enables users to share observations, impressions, and opinions on their urban surroundings.\nHere, everyone can articulate their observations, impressions, and opinions on particular urban surroundings. Inside City Layers, you can insert tags, textual comments, photographs and votes, but also react to the mappings of other users. New `layers` ‚Äì places and observations that are missing, can simply be added to the map. This is a participatory, collectively-produced space, designed to visualise and facilitate how citizens experience and want to experience the city.', mappable: False, start_date: neo4j.time.DateTime(2023, 4, 1, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60))});
CREATE (n:Project {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023', description: 'Nowadays, cities are increasingly being transformed by data technologies and digital platforms at the macro level, causing gaps in the knowledge and understanding of our local urban spaces and processes at the micro level. How can we make future urban interventions more in sync with the citizens‚Äô needs? In what ways can citizens themselves contribute to the spatial changes they want to \nsee in their cities?\nThe research proposes an innovative framework for city-mapping which centres on citizen experience of urban space as an integrative way to contribute to more livable cities. The research aims to deepen the engagement between citizens and city planning by offering a novel citizen science approach combined with an app-based participatory tool that allows citizens to identify, record and reflect upon a range of different material and immaterial `layers` of their urban spaces, including accessibility, noise, safety, climate resilience, aesthetics and amenities. The innovative city mapping approach aims to become a means of communication between citizens and the city, with the goal of fostering the creation of a novel form of data as a commons.', mappable: False, start_date: neo4j.time.DateTime(2023, 11, 1, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60))});
CREATE (n:Recognition {value: 'Prize awarded by the Federal Minister of Science, Education and Research (BMBWF), OeAD Director and project lead Lovro Koncar-Gamulin to City Layers citizen scientists.'});
CREATE (n:Partner {name: 'oead', link: 'https://oead.at/', logo: 'oead.svg'});
CREATE (n:Partner {name: 'TU Wien', link: 'https://www.tuwien.at/', logo: 'tuwien.svg'});
CREATE (n:Partner {name: 'FWF', link: 'https://www.fwf.ac.at/', logo: 'fwf.svg'});
CREATE (n:Partner {name: 'wienxtra', link: 'https://www.wienxtra.at/', logo: 'wienxtra.svg'});
CREATE (n:Partner {name: '√ñsterreich Forscht', link: 'https://www.citizen-science.at/', logo: 'csna.svg'});
CREATE (n:Role {value: 'project manager'});
CREATE (n:Illustration {name: '/images/projects/Urban Observations 2024/0.jpg', caption: 'Urban Observations city walk.'});
CREATE (n:Illustration {name: '/images/projects/Urban Observations 2024/1.jpeg', caption: 'Exploration of urban space and its key features with minors.'});
CREATE (n:Illustration {name: '/images/projects/Urban Observations 2024/2.jpg', caption: 'Interactive data visualisation session at the Data Visualisation Space, TUW.'});
CREATE (n:Illustration {name: '/images/projects/Citizen Science Award 2023/0.jpg', caption: 'Group photo'});
CREATE (n:Illustration {name: '/images/projects/City Layers @Responsive Cities 2023/0.jpg', caption: 'Presentation of the City Layers framework by Lovro Koncar-Gamulin at the Responsive Cities Symposium, Disseny Hub, Barcelona.'});
CREATE (n:Illustration {name: '/images/projects/City Layers @Responsive Cities 2023/1.jpeg', caption: 'Responsive Cities Symposium speakers and panelists.'});
CREATE (n:TeamMember {external: False, name: 'Lovro Koncar-Gamulin', link: 'https://at.linkedin.com/in/lovro-koncar-gamulin-a46b37266'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Was beeinflusst Ihre Meinung √ºber die Sicherheit des Raums?'});
CREATE (n:Config {name: 'Mobility'});
CREATE (n:Question {help: 'Gibt es angemessene verkehrstechnische Ma√ünahmen und st√§dtebauliche Elemente, die die Sicherheit f√ºr Fu√üg√§nger, Radfahrer und Rollstuhlfahrer aller Alters- und Geschlechtsgruppen erh√∂hen?', value: 'Wie sicher f√ºhlt sich dieser Raum an?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Beleuchtung'});
CREATE (n: {value: 'Wie ausreichend ist die Beleuchtung?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut', min: 0, max: 100, atype: 'range'});
CREATE (n:Place {lon: 10.0, lat: 50.0});
CREATE (n:Answer {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'});
CREATE (n:Question {value: 'Gibt es Fu√üg√§nger√ºberwege?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden', min: 0, max: 100, atype: 'range'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)});
CREATE (n:Answer {atype: 'bool', name: 'Pr√§senz der Menschen'});
CREATE (n:Question {value: 'Wie angemessen ist die Anzahl der Personen in diesem Raum?'});
CREATE (n:Answer {minlabel: 'zu wenig', maxlabel: 'optimal', min: 0, max: 100, atype: 'range'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)});
CREATE (n:Answer {atype: 'bool', name: '√úberwachung'});
CREATE (n:Question {value: 'Wird dieser Raum  √ºberwacht?'});
CREATE (n:Answer {minlabel: '√ºberhaupt nicht', maxlabel: 'voll', min: 0, max: 100, atype: 'range'});
CREATE (n:Place {lon: 18.083657, lat: 59.313068});
CREATE (n:Answer {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'});
CREATE (n:Question {value: 'Gibt es physische Schutzma√ünahmen im Raum?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'reichlich', min: 0, max: 100, atype: 'range'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)});
CREATE (n:Answer {atype: 'bool', name: 'Diversit√§t der NutzerInnen'});
CREATE (n:Question {value: 'Wie divers sind die NutzerInnen dieses Raums?'});
CREATE (n:Answer {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Ist der Raum leicht zu finden und auf verschiedene Bewegungsarten zug√§nglich?', value: 'Wie gut ist dieser Raum zu erreichen? '});
CREATE (n:Answer {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Barrierefreiheit des Raums?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Rampen und Aufz√ºge'});
CREATE (n:Question {value: 'Gibt es Rampen und Aufz√ºge in diesem Raum?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich', min: 0, max: 100, atype: 'range'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)});
CREATE (n:Answer {atype: 'bool', name: 'Treppen und stufenlose Bewegung'});
CREATE (n:Question {value: 'Wie gut sind die Treppen und stufenlosen Wege?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich', min: 0, max: 100, atype: 'range'});
CREATE (n:Place {lon: 18.0627297, lat: 59.3326423});
CREATE (n:Answer {atype: 'bool', name: 'Beschilderung'});
CREATE (n:Question {value: 'Wie gut sind die Schilder an diesem Ort? '});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend', min: 0, max: 100, atype: 'range'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 2, 10, 24, 28, 790000000, tzinfo=<UTC>)});
CREATE (n:Answer {atype: 'bool', name: 'physische Barrieren'});
CREATE (n:Question {value: 'Gibt es physische Barrieren in diesem Raum?'});
CREATE (n:Answer {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden', min: 0, max: 100, atype: 'range'});
CREATE (n:Place {lon: 16.352403, lat: 48.1910567});
CREATE (n:Answer {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'});
CREATE (n:Question {value: 'Wie breit sind die Fu√üg√§ngerwege an dieser Stelle?'});
CREATE (n:Answer {minlabel: 'nicht breit genug', maxlabel: 'sehr breit', min: 0, max: 100, atype: 'range'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)});
CREATE (n:Answer {atype: 'bool', name: 'Fahrradwege'});
CREATE (n:Question {value: 'Wie gut sind die Radwege an diesem Ort?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend', min: 0, max: 100, atype: 'range'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 2, 15, 19, 18, 852000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.388723829154323, lat: 48.206863988959206});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 18.0092694, lat: 59.3369308});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 2, 18, 7, 43, 402000000, tzinfo=<UTC>)});
CREATE (n: {value: 'Gibt es Rampen und Aufz√ºge in diesem Raum?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich', min: 0, max: 100, atype: 'range'});
CREATE (n:Place {lon: 16.371289591922746, lat: 48.229876688809505});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.391428691122687, lat: 48.20657787651979});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 12, 48, 46, 368000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.369135092499246, lat: 48.23249014216553});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3694765, lat: 48.2326724});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.369488, lat: 48.2328346});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 13, 30, 3, 411000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3713024, lat: 48.2304501});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.37097189726785, lat: 48.23038542986666});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)});
CREATE (n:Question {help: 'Sind der Raum und seine wichtigen Funktionen f√ºr jeden zug√§nglich, unabh√§ngig von Alter, Geschlecht, k√∂rperlicher oder finanzieller Einschr√§nkung?', value: 'Wie inklusiv ist dieser Raum?'});
CREATE (n:Answer {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Inklusivit√§t des Raums?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'});
CREATE (n:Question {help: '(z. B. unterschiedlichen Alters, Geschlechts, ethnischer Zugeh√∂rigkeit, beruflichem und finanziellem Hintergrund)', value: 'Wie unterschiedlich sind die sozialen Gruppen in diesem Raum?'});
CREATE (n:Answer {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'});
CREATE (n:Question {value: 'Wie gut sind die Einrichtungen f√ºr Menschen mit Behinderungen?'});
CREATE (n:Answer {minlabel: 'unzureichend', maxlabel: 'umfassend', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Kulturelle Sensibilit√§t'});
CREATE (n:Question {value: 'Wie sensibel ist dieser Raum f√ºr Menschen mit unterschiedlichem kulturellen Hintergrund?'});
CREATE (n:Answer {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Kosten'});
CREATE (n:Question {value: 'Wie erschwinglich ist der Zugang zu diesem Raum und seinen Einrichtungen?'});
CREATE (n:Answer {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'});
CREATE (n:Question {value: 'Wie gut sind die Einrichtungen f√ºr Kinder oder Familien hier?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'reichlich', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'});
CREATE (n:Question {value: 'Gibt es Einrichtungen f√ºr SeniorInnen hier?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Ist der Raum unabh√§ngig von seiner Ausstattung einladend und √§sthetisch angenehm?', value: 'Wie angenehm und bequem ist dieser Raum?'});
CREATE (n:Answer {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Erfahrung und den Komfort des Raums?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Sauberkeit'});
CREATE (n:Question {help: '(z. B. unterschiedlichen Alters, Geschlechts, ethnischer Zugeh√∂rigkeit, beruflichem und finanziellem Hintergrund)', value: 'Wie sauber ist der Ort?'});
CREATE (n:Answer {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'});
CREATE (n:Question {value: 'Gibt es mehrere Nutzungsm√∂glichkeiten f√ºr den Raum?'});
CREATE (n:Answer {minlabel: 'sehr gering', maxlabel: 'sehr hoch', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'soziale Aktivit√§t'});
CREATE (n:Question {value: 'Wie empfinden Sie die soziale Aktivit√§t an diesem Ort?'});
CREATE (n:Answer {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Natur und Gr√ºnraum'});
CREATE (n:Question {value: 'Gibt es Gr√ºnfl√§chen und Natur an diesem Ort?'});
CREATE (n:Answer {minlabel: 'keine', maxlabel: 'viele', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Stadtm√∂bel'});
CREATE (n:Question {help: '(z. B. B√§nke, Sonnenschutz, Ausstattung)', value: 'Gibt es Stadtm√∂bel an diesem Ort? '});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'reichlich', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Sinneserfahrung'});
CREATE (n:Question {help: '(z. B. L√§rm, Ger√ºche, Ausblicke, Materialien)', value: 'Wie empfinden Sie die sensorische Erfahrung in diesem Raum?'});
CREATE (n:Answer {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Ist der Raum leicht zu finden und f√ºr verschiedene Fortbewegungsarten zug√§nglich? ', value: 'Wie gut ist dieser Raum mit anderen verbunden?'});
CREATE (n:Answer {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Verbindung des Ortes?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'});
CREATE (n:Question {help: '(z. B. zu Fu√ü, mit dem Fahrrad, auf dem Rollstuhl, mit √∂ffentlichen Verkehrsmitteln, mit privaten Fahrzeugen)', value: 'Wie leicht k√∂nnen die Menschen mit unterschiedlichen Mobilit√§tsoptionen diesen Ort erreichen?'});
CREATE (n:Answer {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'});
CREATE (n:Question {value: 'Wie nah ist die n√§chste Haltestelle f√ºr √∂ffentliche Verkehrsmittel?'});
CREATE (n:Answer {minlabel: 'sehr weit', maxlabel: 'sehr hier', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'});
CREATE (n:Question {help: '(z. B. Verf√ºgbarkeit von Fahrr√§dern, Motorrollern, Carsharing)', value: 'Wie stehen die nachhaltigen Transportm√∂glichkeiten an diesem Standort?'});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'});
CREATE (n:Question {help: '(Wartezeiten, Real-time informationen, Entfernung zwischen den Haltestellen, einfacher Fahrkartenkauf)', value: 'Wie einfach ist es, zwischen den Mobilit√§tsmodi zu wechseln?'});
CREATE (n:Answer {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Beschilderung'});
CREATE (n:Question {value: 'Wie gut ist dieser Ort beschildert?'});
CREATE (n:Answer {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'});
CREATE (n:Question {value: 'Wie bequem sind die Transportm√∂glichkeiten an diesem Ort?'});
CREATE (n:Answer {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'IHRE ANTWORTEN WERDEN ANONYM BLEIBEN.', value: 'K√∂nnen Sie sich mit einer der folgenden Gruppen identifizieren ? Sie k√∂nnen mehr als eine ausw√§hlen.'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'm√∂chte lieber nicht sagen'});
CREATE (n:Question {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'zu Fu√ü'});
CREATE (n:Answer {atype: 'bool', name: 'ein Kind'});
CREATE (n:Answer {atype: 'bool', name: 'ein Senior'});
CREATE (n:Answer {atype: 'bool', name: 'eine Person mit Bewegungsschwierigkeiten'});
CREATE (n:Answer {atype: 'bool', name: 'eine Neurodivergente Person'});
CREATE (n:Answer {atype: 'bool', name: 'ein Elternteil'});
CREATE (n:Answer {atype: 'bool', name: 'eine Betreuungsperson'});
CREATE (n:Answer {atype: 'bool', name: 'Radfahren'});
CREATE (n:Answer {atype: 'bool', name: 'Rollstuhlfahren'});
CREATE (n:Answer {atype: 'bool', name: '√∂ffentliche Verkehrsmittel'});
CREATE (n:Answer {atype: 'bool', name: 'Privatfahrzeug'});
CREATE (n:Illustration {name: '1732471265498.jpg'});
CREATE (n:Place {lon: 16.37096973885488, lat: 48.2304248564018});
CREATE (n:TeamMember {external: True, name: 'Firas Saffieddine', link: 'https://iaac.net/dt-team/firas-safieddine/'});
CREATE (n:TeamMember {external: True, name: 'Andrea Wiesinger', link: ''});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)});
CREATE (n:Partner {name: 'IMPETUS', link: 'https://impetus4cs.eu/', logo: 'impetus.svg'});
CREATE (n:Partner {name: 'EU Sparks', link: 'https://eusparks.eu/', logo: 'eusparks.svg'});
CREATE (n:Partner {name: 'KinderUni', link: 'https://kinderuni.at/', logo: 'kinderuni.svg'});
CREATE (n:Place {lon: 16.370948553177165, lat: 48.23046386876552});
CREATE (n:Partner {name: 'Community Creates Mobility', link: 'https://www.mobility.community/en/home/', logo: 'ccm.svg'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.37118904069878, lat: 48.229910016703094});
CREATE (n:Recognition {value: 'Winner of the EU Sparks for Climate Regional Hackathon Austria & Germany'});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.370877707704146, lat: 48.2297903188459});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.371058893217153, lat: 48.22984867308278});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)});
CREATE (n:Illustration {name: '1732471032689.jpg'});
CREATE (n:Place {lon: 18.083634, lat: 59.313106});
CREATE (n:Place {lon: 16.3714665, lat: 48.2298777});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.37112237914667, lat: 48.22976595122806});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)});
CREATE (n:Role {value: 'research assistant'});
CREATE (n:Question {help: '', qtype: 'range', value: 'Wie ausreichend ist die Beleuchtung? '});
CREATE (n:Answer {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut', min: 0, max: 100, atype: 'range'});
CREATE (n:Config {name: 'Kalamata'});
CREATE (n:Question {help: 'ŒûŒµŒ∫ŒØŒΩŒ± œÄœÅŒøœÉŒ∏Œ≠œÑŒøŒΩœÑŒ±œÇ ŒºŒπŒ± œÜœâœÑŒøŒ≥œÅŒ±œÜŒØŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ œÄŒøœÖ Œ∏Œ≠ŒªŒµŒπœÇ ŒΩŒ± œáŒ±œÅœÑŒøŒ≥œÅŒ±œÜŒÆœÉŒµŒπœÇ. Œ£œÑŒ∑ œÉœÖŒΩŒ≠œáŒµŒπŒ±, Œ±Œ∫ŒøŒªŒøœçŒ∏Œ∑œÉŒµ ŒºŒµœÅŒπŒ∫Œ¨ Œ≤ŒÆŒºŒ±œÑŒ± Œ≥ŒπŒ± ŒΩŒ± ŒºŒøŒπœÅŒ±œÉœÑŒµŒØœÇ œÑŒπœÇ œÉŒ∫Œ≠œàŒµŒπœÇ œÉŒøœÖ Œ≥ŒπŒ± œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå. Œ£œÑŒø œÑŒ≠ŒªŒøœÇ, Œ∑ œÉœÖŒΩŒµŒπœÉœÜŒøœÅŒ¨ œÉŒøœÖ Œ∏Œ± ŒµŒºœÜŒ±ŒΩŒπœÉœÑŒµŒØ œÉœÑŒø œáŒ¨œÅœÑŒ∑ Œ∫Œ±Œπ Œ∏Œ± ŒµŒØŒΩŒ±Œπ ŒøœÅŒ±œÑŒÆ œÉŒµ œåŒªŒøœÖœÇ.', value: 'Œ§Œπ Œ∏Œ≠ŒªŒµŒπœÇ ŒΩŒ± œáŒ±œÅœÑŒøŒ≥œÅŒ±œÜŒÆœÉŒµŒπœÇ?'});
CREATE (n:Answer {atype: 'image'});
CREATE (n:Question {help: 'ŒîœÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ∫Œ±Œπ œáœÅŒÆœÉŒµŒπœÇ œÄŒøœÖ Œ≥ŒØŒΩŒøŒΩœÑŒ±Œπ œÉœÑŒøŒΩ œáœéœÅŒø', value: 'Œ†œéœÇ Œ∏Œ± Œ±ŒæŒπŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒπœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÄŒøœÖ Œ≥ŒØŒΩŒøŒΩœÑŒ±Œπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç œÄŒµœÅŒπŒøœÅŒπœÉŒºŒ≠ŒΩŒµœÇ', maxlabel: 'œÄŒøŒªœç œÄŒªŒøœçœÉŒπŒµœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒµœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒπœÇ œáœÅŒÆœÉŒµŒπœÇ œÑŒøœÖ œáœéœÅŒøœÖ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'ŒÜŒ∏ŒªŒ∑œÉŒ∑'});
CREATE (n:Question {help: '', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ¨Œ∏ŒªŒ∑œÉŒ∑ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†ŒµœÅŒØœÄŒ±œÑŒøœÇ'});
CREATE (n:Question {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± Œ≥ŒπŒ± œÄŒµœÅŒØœÄŒ±œÑŒø ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'Œ¨ŒΩŒµœÑŒ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒßŒ±ŒªŒ¨œÅœâœÉŒ∑'});
CREATE (n:Question {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÉŒ∑ŒºŒµŒØŒ± Œ≥ŒπŒ± ŒæŒµŒ∫ŒøœçœÅŒ±œÉŒ∑ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒ≠œÄŒ±œÅŒ∫œÑŒ±', maxlabel: 'œÄŒøŒªŒªŒ¨', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†Œ±ŒπœáŒΩŒØŒ¥Œπ'});
CREATE (n:Question {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒøŒΩ œáœéœÅŒø Œ≥ŒπŒ± œÄŒ±ŒπœáŒΩŒØŒ¥Œπ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøœÇ', maxlabel: 'Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒ±œÜŒ≠œÇ Œ∫Œ±Œπ œÜŒ±Œ≥Œ∑œÑœå'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫Œ±œÜŒ≠ Œ∫Œ±Œπ œÜŒ±Œ≥Œ∑œÑœå ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒïŒ∫Œ¥Œ∑ŒªœéœÉŒµŒπœÇ'});
CREATE (n:Question {help: 'œÄ.œá. œÉœÖŒΩŒ±œÖŒªŒØŒµœÇ, œÜŒµœÉœÑŒπŒ≤Œ¨Œª', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± ŒµŒ∫Œ¥Œ∑ŒªœéœÉŒµŒπœÇ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒïŒºœÄŒøœÅŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ'});
CREATE (n:Question {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒπœÇ ŒµŒºœÄŒøœÅŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒµœÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†ŒøŒªŒπœÑŒπœÉœÑŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ'});
CREATE (n:Question {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒπœÇ œÄŒøŒªŒπœÑŒπœÉœÑŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒµœÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†ŒµœÅŒπŒ≤Œ±ŒªŒªŒøŒΩœÑŒπŒ∫Œ≠œÇ Œ¥œÅŒ¨œÉŒµŒπœÇ'});
CREATE (n:Question {help: '', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± œÄŒµœÅŒπŒ≤Œ±ŒªŒªŒøŒΩœÑŒπŒ∫Œ≠œÇ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒµœÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Œó œÉœÖŒΩŒøŒªŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ∫Œ±Œπ Œ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫ŒÆ œÑŒøœÖ œáœéœÅŒøœÖ', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒ∑ Œ≥ŒµŒΩŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒøœÖ œáœéœÅŒøœÖ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'Œ¨œÅŒπœÉœÑŒ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ œÄŒøŒπœåœÑŒ∑œÑŒ± œÑŒøœÖ œáœéœÅŒøœÖ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒ±Œ∏Œ±œÅŒπœåœÑŒ∑œÑŒ±'});
CREATE (n:Question {help: '', value: 'Œ†œåœÉŒø Œ∫Œ±Œ∏Œ±œÅœå ŒµŒØŒΩŒ±Œπ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ≤œÅœéŒºŒπŒ∫Œø', maxlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∏Œ±œÅœå', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒúœÖœÅœâŒ¥ŒπŒ¨'});
CREATE (n:Question {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œ∑ ŒºœÖœÅœâŒ¥ŒπŒ¨ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ¨œÉœáŒ∑ŒºŒ∑', maxlabel: 'œÖœÄŒ≠œÅŒøœáŒ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ¥Œ≠ŒΩœÑœÅœâŒΩ Œ∫Œ±Œπ œÜœÖœÑœéŒΩ'});
CREATE (n:Question {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒ± Œ¥Œ≠ŒΩœÑœÅŒ± Œ∫Œ±Œπ œÑŒ± œÜœÖœÑŒ¨ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±œÑŒµœÉœÑœÅŒ±ŒºŒºŒ≠ŒΩŒ±', maxlabel: 'œÖŒ≥ŒπŒÆ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒüŒºŒøœÅœÜŒπŒ¨ œÑŒøœÖ œÑŒøœÄŒØŒøœÖ'});
CREATE (n:Question {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫ŒÆ œÑŒøœÖ œÑŒøœÄŒØŒøœÖ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩœÑŒπŒ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫œå', maxlabel: 'œÄŒ±ŒΩŒ≠ŒºŒøœÅœÜŒø', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ£œÄŒ±œÉŒºŒ≠ŒΩŒ± ŒÆ ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± œÉŒ∑ŒºŒµŒØŒ±'});
CREATE (n:Question {help: 'œÄ.œá. œÉœÄŒ±œÉŒºŒ≠ŒΩŒ± œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ±, ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÉŒ∑ŒºŒµŒØŒ± œÄŒøœÖ Œ∏ŒµœâœÅŒµŒØœÇ ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± ŒÆ Œ∫Œ±œÑŒµœÉœÑœÅŒ±ŒºŒºŒ≠ŒΩŒ± ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªŒªŒ¨', maxlabel: 'Œ∫Œ±ŒΩŒ≠ŒΩŒ±', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ•ŒªŒπŒ∫Œ¨ Œ∫Œ±Œπ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÉŒ∑ŒºŒµŒØŒøœÖ'});
CREATE (n:Question {help: 'œÄ.œá. œÖŒªŒπŒ∫Œ¨ Œ¥Œ±œÄŒ≠Œ¥ŒøœÖ', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ œÄŒøŒπœåœÑŒ∑œÑŒ± œÑœâŒΩ œÖœÄŒøŒ¥ŒøŒºœéŒΩ?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'œÄŒøŒªœç Œ∫Œ±ŒªŒÆ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒâœáŒøŒπ'});
CREATE (n:Question {help: '', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ ŒÆœáŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ¥œÖœÉŒ¨œÅŒµœÉœÑŒøŒπ', maxlabel: 'œÄŒøŒªœç ŒµœÖœáŒ¨œÅŒπœÉœÑŒøŒπ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒöŒ±œÑŒ±œÉŒ∫ŒµœÖŒ≠œÇ Œ∫Œ±Œπ ŒµŒæŒøœÄŒªŒπœÉŒºœåœÇ œÄŒøœÖ œÖœÄŒ¨œÅœáŒøœÖŒΩ œÉœÑŒøŒΩ œáœéœÅŒø', value: 'Œ†œéœÇ Œ±ŒæŒπŒøŒªŒøŒ≥ŒµŒØœÇ œÑŒπœÇ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'œÄŒªŒÆœÅŒµŒπœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒπœÇ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ Œ∫Œ±Œπ œÑŒøŒΩ ŒµŒæŒøœÄŒªŒπœÉŒºœå œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†Œ±ŒπŒ¥ŒπŒ∫Œ≠œÇ œáŒ±œÅŒ≠œÇ'});
CREATE (n:Question {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒ∑œÇ œÄŒ±ŒπŒ¥ŒπŒ∫ŒÆœÇ œáŒ±œÅŒ¨œÇ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'œÄŒøŒªœç Œ∫Œ±ŒªŒÆ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒëŒ∏ŒªŒ∑œÑŒπŒ∫ŒøŒØ œáœéœÅŒøŒπ'});
CREATE (n:Question {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ Œ±Œ∏ŒªŒ∑œÑŒπŒ∫ŒøŒØ œáœéœÅŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒîŒ∑ŒºœåœÉŒπŒµœÇ œÑŒøœÖŒ±ŒªŒ≠œÑŒµœÇ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ±œÅŒ∫ŒµœÑŒ≠œÇ Œ∫Œ±Œπ Œ∫Œ±Œ∏Œ±œÅŒ≠œÇ œÑŒøœÖŒ±ŒªŒ≠œÑŒµœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†Œ±Œ≥Œ∫Œ¨Œ∫ŒπŒ± Œ∫Œ±Œπ œÉœÑŒ≠Œ≥Œ±œÉœÑœÅŒ±'});
CREATE (n:Question {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ± Œ∫Œ±Œπ œÑŒ± œÉœÑŒ≠Œ≥Œ±œÉœÑœÅŒ± ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±œÑŒµœÉœÑœÅŒ±ŒºŒºŒ≠ŒΩŒ±', maxlabel: 'œÉŒµ Œ∫Œ±ŒªŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ£œÑŒøŒπœáŒµŒØŒ± œÑŒ≠œáŒΩŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ±Œ∫œåœÉŒºŒ∑œÉŒ∑œÇ'});
CREATE (n:Question {help: 'œÄ.œá. Œ¨Œ≥Œ±ŒªŒºŒ±, œÉœÖŒΩœÑœÅŒπŒ≤Œ¨ŒΩŒπ, œáœÅœéŒºŒ±œÑŒ±, graffitti', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÑŒ≠œáŒΩŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ±Œ∫œåœÉŒºŒ∑œÉŒ∑œÇ œÉœÑŒø œáœéœÅŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ¨œÉœáŒ∑ŒºŒ±', maxlabel: 'œÄŒøŒªœç œåŒºŒøœÅœÜŒ±', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒªŒµŒπœÉœÑŒøŒØ œáœéœÅŒøŒπ ŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπŒøœÑŒÆœÑœâŒΩ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥ŒπŒ±Œ∏Œ≠œÉŒπŒºŒøŒπ œáœéœÅŒøŒπ ŒπœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπŒøœÑŒÆœÑœâŒΩ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒëŒΩŒ¨Œ≥Œ∫Œ∑ Œ≥ŒπŒ± ŒΩŒ≠ŒµœÇ ŒµŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÉŒµŒπœÇ'});
CREATE (n:Question {help: '', value: 'ŒòŒµœâœÅŒµŒØœÇ œåœÑŒπ œáœÅŒµŒπŒ¨Œ∂ŒøŒΩœÑŒ±Œπ ŒΩŒ≠ŒµœÇ ŒµŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÉŒµŒπœÇ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ Œ±ŒΩŒ¨Œ≥Œ∫Œ∑', maxlabel: 'ŒºŒµŒ≥Œ¨ŒªŒ∑ Œ±ŒΩŒ¨Œ≥Œ∫Œ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Œó Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± œÄœÅœåœÉŒ≤Œ±œÉŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ≠ŒªŒµœÖœÉŒ∑œÇ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒ∑ŒΩ œÄœÅŒøœÉŒ≤Œ±œÉŒπŒºœåœÑŒ∑œÑŒ± Œ±œÖœÑŒøœç œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'œÄŒøŒªœç ŒµœçŒ∫ŒøŒªŒ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ œÄœÅŒøœÉŒ≤Œ±œÉŒπŒºœåœÑŒ∑œÑŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ Œ±œÖœÑŒøœç?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'ŒîŒπŒ¨Œ≤Œ±œÉŒ∑ œÄŒµŒ∂œéŒΩ'});
CREATE (n:Question {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥ŒπŒ¨Œ≤Œ±œÉŒ∑ œÄŒµŒ∂œéŒΩ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∫ŒÆ', maxlabel: 'Œ∫Œ±ŒªŒÆ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ°Œ¨ŒºœÄŒµœÇ Œ∫Œ±Œπ ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± ŒëŒºŒµŒë Œ∫Œ±Œπ Œ∫Œ±œÅœåœÑœÉŒπŒ±'});
CREATE (n:Question {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÅŒ¨ŒºœÄŒµœÇ Œ≥ŒπŒ± ŒëŒºŒµŒë œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†œÅœåœÉŒ≤Œ±œÉŒ∑ ŒºŒµ œÑŒ± ŒúŒúŒú'});
CREATE (n:Question {value: 'ŒïŒØŒΩŒ±Œπ ŒµœçŒ∫ŒøŒªŒø ŒΩŒ± Œ≠œÅŒ∏ŒµŒπœÇ ŒºŒµ ŒºŒ≠œÉŒ± ŒºŒ±Œ∂ŒπŒ∫ŒÆœÇ ŒºŒµœÑŒ±œÜŒøœÅŒ¨œÇ?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'œÄŒøŒªœç ŒµœçŒ∫ŒøŒªŒ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†œÅŒøœÉŒ≤Œ¨œÉŒπŒºŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ±'});
CREATE (n:Question {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± œÄŒµŒ∂ŒøœçœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'ŒºŒ∑ œÄœÅŒøœÉŒ≤Œ¨œÉŒπŒºŒ±', maxlabel: 'œÄŒªŒÆœÅœâœÇ œÄœÅŒøœÉŒ≤Œ¨œÉŒπŒºŒ±', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ§Œ±ŒºœÄŒ≠ŒªŒµœÇ Œ∫Œ±Œπ œÉŒÆŒºŒ±ŒΩœÉŒ∑ œÄœÅŒøœÉŒ±ŒΩŒ±œÑŒøŒªŒπœÉŒºŒøœç'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ œÑŒ±ŒºœÄŒ≠ŒªŒµœÇ œÄœÅŒøœÉŒ±ŒΩŒ±œÑŒøŒªŒπœÉŒºŒøœç œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒïŒØœÉŒøŒ¥ŒøŒπ'});
CREATE (n:Question {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ ŒµŒØœÉŒøŒ¥ŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†ŒøŒ¥ŒÆŒªŒ±œÑŒø'});
CREATE (n:Question {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± Œ≥ŒπŒ± œÄŒøŒ¥ŒÆŒªŒ±œÑŒø ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'Œ¨ŒΩŒµœÑŒ∑', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒëŒØœÉŒ∏Œ∑ŒºŒ± Œ±œÉœÜŒ¨ŒªŒµŒπŒ±œÇ Œ∫Œ±œÑŒ¨ œÑŒ∑ Œ¥ŒπŒ¨œÅŒ∫ŒµŒπŒ± œÑŒ∑œÇ œÄŒ±œÅŒ±ŒºŒøŒΩŒÆœÇ', value: 'Œ†œåœÉŒø Œ±œÉœÜŒ±ŒªŒ≠œÇ Œ∏ŒµœâœÅŒµŒØœÇ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ Œ±œÉœÜŒ±ŒªŒ≠œÇ', maxlabel: 'œÄŒøŒªœç Œ±œÉœÜŒ±ŒªŒ≠œÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ Œ±œÉœÜŒ¨ŒªŒµŒπŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Œ¶œâœÑŒπœÉŒºœåœÇ Œ∫Œ±Œπ ŒøœÅŒ±œÑœåœÑŒ∑œÑŒ±'});
CREATE (n:Question {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œø œÜœâœÑŒπœÉŒºœåœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø, ŒµŒπŒ¥ŒπŒ∫Œ¨ œÑŒø Œ≤œÅŒ¨Œ¥œÖ?'});
CREATE (n:Answer {minlabel: 'ŒµŒªŒªŒπœÄŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ°Œ¨ŒºœÄŒµœÇ Œ∫Œ±Œπ ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± ŒëŒºŒµŒë Œ∫Œ±Œπ Œ∫Œ±œÅœåœÑœÉŒπŒ±'});
CREATE (n:Question {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÅŒ¨ŒºœÄŒµœÇ Œ≥ŒπŒ± ŒëŒºŒµŒë œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒëœÄŒøŒºŒøŒΩœâŒºŒ≠ŒΩŒø œÉŒ∑ŒºŒµŒØŒø'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ±œÄŒøŒºŒøŒΩœâŒºŒ≠ŒΩŒ± œÉŒ∑ŒºŒµŒØŒ± œÄŒøœÖ ŒΩŒπœéŒ∏ŒµŒπœÇ Œ±ŒΩŒ±œÉœÜŒ¨ŒªŒµŒπŒ±?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªŒªŒ¨', maxlabel: 'Œ∫Œ±ŒΩŒ≠ŒΩŒ±', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒíŒ±ŒΩŒ¥Œ±ŒªŒπœÉŒºŒøŒØ ŒÆ œÄŒ±œÅŒ±Œ≤Œ±œÑŒπŒ∫œåœÑŒ∑œÑŒ±'});
CREATE (n:Question {value: 'ŒàœáŒµŒπœÇ œÄŒ±œÅŒ±œÑŒ∑œÅŒÆœÉŒµŒπ Œ≤Œ±ŒΩŒ¥Œ±ŒªŒπœÉŒºŒøœçœÇ ŒÆ œÄŒ±œÅŒ±Œ≤Œ±œÑŒπŒ∫œåœÑŒ∑œÑŒ± œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'œÉœÖœáŒΩŒ¨', maxlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒ¨Œ≥Œ∫ŒµŒªŒ± Œ∫Œ±Œπ œÄŒµœÅŒØœÜœÅŒ±ŒæŒ∑'});
CREATE (n:Question {value: 'Œ†œâœÇ ŒµŒØŒΩŒ±Œπ Œ∑ œÄœÅŒøœÉœÑŒ±œÉŒØŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ ŒºŒµ Œ∫Œ¨Œ≥Œ∫ŒµŒªŒ± Œ∫Œ±Œπ œÄŒµœÅŒπœÜœÅŒ¨ŒæŒµŒπœÇ?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ¶œçŒªŒ±ŒæŒ∑ œáœéœÅŒøœÖ'});
CREATE (n:Question {value: 'ŒïŒØŒΩŒ±Œπ ŒµœÄŒ±œÅŒ∫ŒÆœÇ Œ∑ œÜœçŒªŒ±ŒæŒ∑ œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑŒøœç?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ¶œÖœÉŒπŒ∫ŒøŒØ Œ∫ŒØŒΩŒ¥œÖŒΩŒøŒπ'});
CREATE (n:Question {help: 'œÄ.œá. œÄŒøŒπœåœÑŒ∑œÑŒ± œÖœÄŒøŒ¥ŒøŒºœéŒΩ, Œ∫ŒØŒΩŒ∑œÉŒ∑ Œ±œÖœÑŒøŒ∫ŒπŒΩŒÆœÑœâŒΩ Œ∫ŒªœÄ', value: 'Œ§œÄŒ¨œÅœáŒøœÖŒΩ œÜœÖœÉŒπŒ∫ŒøŒØ Œ∫ŒØŒΩŒ¥œÖŒΩŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'Œ§Œø œÜœÖœÉŒπŒ∫œå œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ Œ∫Œ±Œπ œÑŒø ŒºŒπŒ∫œÅŒøŒ∫ŒªŒØŒºŒ± œÑŒ∑œÇ œÄŒµœÅŒπŒøœáŒÆœÇ', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒø œÜœÖœÉŒπŒ∫œå œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ Œ±œÖœÑŒøœç œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫Œ≠œÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫œå', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒø œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'ŒîŒ≠ŒΩœÑœÅŒ± Œ∫Œ±Œπ œÄœÅŒ¨œÉŒπŒΩŒø'});
CREATE (n:Question {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œ∑ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒøœÖ œÄœÅŒ¨œÉŒπŒΩŒøœÖ Œ∫Œ±Œπ œÑœâŒΩ Œ¥Œ≠ŒΩœÑœÅœâŒΩ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'œÄŒøŒªœç Œ∫Œ±ŒªŒÆ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒóœÅŒµŒºŒØŒ± Œ∫Œ±Œπ Œ∏œåœÅœÖŒ≤ŒøœÇ'});
CREATE (n:Question {value: 'Œ†œåœÉŒø ŒÆœÉœÖœáŒø ŒÆ Œ∏ŒøœÅœÖŒ≤œéŒ¥ŒµœÇ ŒµŒØŒΩŒ±Œπ œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ∏ŒøœÅœÖŒ≤œéŒ¥ŒµœÇ', maxlabel: 'œÄŒøŒªœç ŒÆœÉœÖœáŒø', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ£Œ∫ŒπŒ¨, œÉœÑŒ≠Œ≥Œ±œÉŒ∑ Œ∫Œ±Œπ Œ±ŒµœÅŒπœÉŒºœåœÇ'});
CREATE (n:Question {help: 'œÄ.œá. œÉŒ∫ŒπŒ¨, Œ¥œÅŒøœÉŒπŒ¨', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒø ŒºŒπŒ∫œÅŒøŒ∫ŒªŒØŒºŒ± ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÄŒøŒªœç Œ¥œÖœÉŒ¨œÅŒµœÉœÑŒø', maxlabel: 'œÄŒøŒªœç ŒµœÖœáŒ¨œÅŒπœÉœÑŒø', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ, Œ±ŒΩŒ±Œ∫œçŒ∫ŒªœâœÉŒ∑œÇ, Œ∫ŒøŒºœÄŒøœÉœÑŒøœÄŒøŒØŒ∑œÉŒ∑œÇ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ Œ∫Œ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒøŒπŒΩœåœáœÅŒ∑œÉœÑŒøŒπ Œ∫ŒÆœÄŒøŒπ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ œÜœçœÑŒµœÖœÉŒ∑œÇ Œ±œÄœå œÑŒøœÖœÇ Œ∫Œ±œÑŒøŒØŒ∫ŒøœÖœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒëŒΩŒøŒπœáœÑŒøŒØ - Œ∫ŒªŒµŒπœÉœÑŒøŒØ œáœéœÅŒøŒπ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒ∑ ŒµŒΩŒ±ŒªŒªŒ±Œ≥ŒÆ Œ±ŒΩŒ¨ŒºŒµœÉŒ± œÉŒµ Œ±ŒΩŒøŒπœáœÑŒøœçœÇ Œ∫Œ±Œπ œÉœÑŒµŒ≥Œ±œÉŒºŒ≠ŒΩŒøœÖœÇ œáœéœÅŒøœÖœÇ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±ŒºŒØŒ±', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒñœéŒ±'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµŒªŒµœçŒ∏ŒµœÅŒ± Œ∂œéŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±ŒΩŒ≠ŒΩŒ±', maxlabel: 'œÄŒøŒªŒªŒ¨', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†œåœÉŒπŒºŒø ŒΩŒµœÅœå'});
CREATE (n:Question {value: 'Œ†œâœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ\xa0 œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÄœåœÉŒπŒºŒøœÖ ŒΩŒµœÅŒøœç œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩœçœÄŒ±œÅŒ∫œÑŒµœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÖŒ∫Œ±ŒπœÅŒØŒµœÇ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ Œ∫Œ±Œπ œÉœÖŒΩŒ±ŒΩŒ±œÉœÑœÅŒøœÜŒ≠œÇ', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'Œ∂œâŒΩœÑŒ±ŒΩŒÆ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {atype: 'multicategory'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†ŒøŒ∫ŒπŒªŒØŒ± œáœÅŒ∑œÉœÑœéŒΩ'});
CREATE (n:Question {help: 'œÄ.œá. œÜœçŒªŒø, Œ∑ŒªŒπŒ∫ŒØŒ±, ŒµŒ∏ŒΩŒπŒ∫œåœÑŒ∑œÑŒ±, œÜœÖœÉŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒøŒπŒ∫ŒøŒΩŒøŒºŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ œÄŒøŒπŒ∫ŒπŒªŒØŒ± œÑœâŒΩ\xa0 œáœÅŒ∑œÉœÑœéŒΩ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ œÄŒøŒπŒ∫ŒπŒªŒØŒ±', maxlabel: 'ŒºŒµŒ≥Œ¨ŒªŒ∑ œÄŒøŒπŒ∫ŒπŒªŒØŒ±', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒîœÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ≥ŒπŒ± œåŒªŒøœÖœÇ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ≥ŒπŒ±\xa0 œåŒªŒøœÖœÇ, Œ±ŒΩŒµŒæŒ¨œÅœÑŒ∑œÑŒ± Œ±œÄœå œÑŒø œÜœçŒªŒø, œÑŒ∑ŒΩ Œ∑ŒªŒπŒ∫ŒØŒ±, œÑŒ∑ŒΩ ŒµŒ∏ŒΩŒπŒ∫œåœÑŒ∑œÑŒ±, œÑŒ∑ŒΩ œÜœÖœÉŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒøŒπŒ∫ŒøŒΩŒøŒºŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒßœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫Œ≠œÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ'});
CREATE (n:Question {help: 'œÄ.œá. Œ∫Œ±œÜŒ≠, œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ±', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫Œ≠œÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'});
CREATE (n:Answer {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒöŒ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ, Œ±ŒΩŒ±Œ∫œçŒ∫ŒªœâœÉŒ∑œÇ, Œ∫ŒøŒºœÄŒøœÉœÑŒøœÄŒøŒØŒ∑œÉŒ∑œÇ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ Œ∫Œ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒøŒØ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ£Œ∑ŒºŒµŒØŒ± œÑœÖœáŒ±ŒØŒ±œÇ Œ±ŒªŒªŒ∑ŒªŒµœÄŒØŒ¥œÅŒ±œÉŒ∑œÇ Œ∫Œ±Œπ œÉœÖŒΩŒ¨ŒΩœÑŒ∑œÉŒ∑œÇ'});
CREATE (n:Question {value: 'ŒòŒµœâœÅŒµŒØœÇ œåœÑŒπ œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå ŒµŒΩŒ∏Œ±œÅœÅœçŒΩŒµŒπ œÑŒπœÇ œÑœÖœáŒ±ŒØŒµœÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ Œ∫Œ±Œπ œÉœÖŒΩŒ±ŒΩŒ±œÉœÑœÅŒøœÜŒ≠œÇ?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªœç', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'ŒîœÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ Œ±œÖœÑŒøŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫œéŒΩ ŒøŒºŒ¨Œ¥œâŒΩ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ ŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ¨œÉŒµœâŒΩ Œ∫Œ±Œπ ŒµŒ∫Œ¥Œ∑ŒªœéœÉŒµœâŒΩ Œ±œÄœå ŒøŒºŒ¨Œ¥ŒµœÇ Œ∫Œ±œÑŒøŒØŒ∫œàŒΩ œÉœÑŒø œáœéœÅŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Answer {atype: 'bool', name: 'Œ†Œ±œÅŒ¨ŒªŒªŒ∑ŒªŒµœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ'});
CREATE (n:Question {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÄŒøœÖ œÉœÖŒºŒ≤Œ±ŒØŒΩŒøœÖŒΩ œÄŒ±œÅŒ¨ŒªŒªŒ∑ŒªŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'});
CREATE (n:Answer {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ', min: 0, max: 100, atype: 'range'});
CREATE (n:Question {help: ':lower_left_crayon: ŒúœÄŒøœÅŒµŒØœÇ ŒΩŒ± Œ≥œÅŒ¨œàŒµŒπœÇ ŒµœÄŒπœÄŒªŒ≠ŒøŒΩ œÉœáœåŒªŒπŒ±, œÉœÖŒΩŒ±ŒπœÉŒ∏ŒÆŒºŒ±œÑŒ± Œ∫Œ±Œπ œÄŒ±œÅŒ±œÑŒ∑œÅŒÆœÉŒµŒπœÇ.', value: 'ŒòŒ± ŒÆŒ∏ŒµŒªŒµœÇ ŒΩŒ± œÄœÅŒøœÉŒ∏Œ≠œÉŒµŒπœÇ Œ∫Œ¨œÑŒπ Œ±Œ∫œåŒºŒ± Œ≥ŒπŒ± Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø œÄŒøœÖ Œ≤œÅŒØœÉŒ∫ŒµŒπœÇ ŒπŒ¥ŒπŒ±ŒØœÑŒµœÅŒ± Œ∫Œ±Œªœå ŒÆ Œ∫Œ±Œ∫œå?'});
CREATE (n:Answer {atype: 'comment', value: 'ŒìœÅŒ¨œàŒµ ŒµŒ¥œé œÑŒø œÉœáœåŒªŒπœå œÉŒøœÖ'});
CREATE (n:Project {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.', name: 'Imagine the Park, Kalamata', description: "As part of Kalamata city's 'Imagine the Park' initiative for the participatory regeneration of the Railway Park, City Layers is adapted and used as a diagnostic tool to map citizens' experiences on the park. The localised City Layers platform enables residents to give feedback on key 'layers' such as accessibility, safety, environment, recreational opportunities, and gathering spots. In this way, the tool facilitates the collection of detailed, site-specific data directly from residents, supporting the diagnosis with invaluable insights on the lived experiences of those who use the park most.\nNotably, this collaboration marks the first partnership between City Layers and a municipality, introducing a practical application of transforming localized input into actionable planning insights. Launched on-site during the initiative's kick-off weekend on October 19-20, 2024, City Layers was integrated into guided mapping walks and open participatory sessions, sparking hands-on dialogue between residents and experts.", mappable: True, start_date: neo4j.time.DateTime(2024, 10, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60))});
CREATE (n:Partner {name: 'ŒîŒÆŒºŒøœÇ ŒöŒ±ŒªŒ±ŒºŒ¨œÑŒ±œÇ', link: 'https://www.kalamata.gr', logo: 'kalamata.svg'});
CREATE (n:Illustration {name: '/images/projects/Imagine the Park, Kalamata/1.jpg', caption: 'Launching the City Layers mapping walks, OSE Park Kalamata, Greece. Photo \n¬©Kalamata Municipality'});
CREATE (n:Place {lon: 16.371155442085072, lat: 48.2297597806478});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3714401, lat: 48.2300156});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.37096168577437, lat: 48.22980338733629});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3712901, lat: 48.2296418});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 18.083633, lat: 59.313071});
CREATE (n:Observation {date: neo4j.time.DateTime(2024, 12, 15, 16, 16, 1, 782000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3528028, lat: 48.1945695});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3533739, lat: 48.1956401});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3541356, lat: 48.1978469});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3537608, lat: 48.1996822});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3501286, lat: 48.198333});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3479971, lat: 48.1974992});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3438369, lat: 48.1965819});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3454451, lat: 48.1952523});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 9, 17, 9, 19, 859000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.39140458654112, lat: 48.20658637148999});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3495189, lat: 48.1929875});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.351232, lat: 48.185344});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3494082, lat: 48.1952281});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3577856, lat: 48.1722368});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 13.040090727572041, lat: 47.822116992137396});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.369807500390216, lat: 48.199803006944485});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.369233398220782, lat: 48.19962080466332});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 1, 30, 14, 28, 54, 488000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3494437, lat: 48.192948});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3494551, lat: 48.1929465});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3485862, lat: 48.1895441});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 13.0319024, lat: 47.8025611});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.351232, lat: 48.1820672});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 18.031796, lat: 59.317005});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.39153540928458, lat: 48.20667303999637});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 24, 19, 6, 24, 279000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3494948, lat: 48.1929928});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.400384, lat: 48.1427456});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.388119, lat: 48.218788});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.363449, lat: 48.210033});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)});
CREATE (n:Illustration {name: '1742225005231.JPG'});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 17, 15, 24, 20, 638000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.357945507973117, lat: 48.21078294351469});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 22, 11, 12, 38, 632000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.357985734748418, lat: 48.21077105225776});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 23, 9, 50, 49, 848000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3579565, lat: 48.210806});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 23, 10, 48, 4, 637000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.3579392, lat: 48.2106479});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 23, 12, 9, 24, 943000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 23, 16, 32, 57, 6000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.391474260369627, lat: 48.20655227969873});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 25, 15, 12, 58, 2000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 26, 21, 27, 49, 510000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.966703811186816, lat: 45.812212744685986});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.95802659698721, lat: 45.81742165078536});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 12.058624, lat: 57.6126976});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.39140018238004, lat: 48.20654873894287});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.391418001844418, lat: 48.20657322625361});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 3, 31, 14, 17, 36, 777000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)});
CREATE (n:Illustration {name: '1743690776979.JPG'});
CREATE (n:Place {lon: 2.2052864, lat: 41.4121984});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.4102144, lat: 48.16896});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)});
CREATE (n:Illustration {name: '1743924234529.jpg'});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.350515122569767, lat: 48.204252778740184});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 2.1364736, lat: 41.3925376});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 7, 17, 56, 18, 90000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 2.13934, lat: 41.3828575});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 5, 49, 45, 95000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 2.1394139, lat: 41.3829604});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 5, 58, 11, 313000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 2.1393624, lat: 41.382882});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 6, 0, 6, 225000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 2.1364736, lat: 41.3892608});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 6, 1, 47, 462000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 2.1393679, lat: 41.3829152});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 6, 43, 21, 297000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 7, 10, 55, 696000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 7, 11, 52, 965000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 7, 15, 57, 574000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.313391245825976, lat: 48.199518466081194});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 9, 22, 14, 46, 972000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 18.256086094006182, lat: 59.294875028428116});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.95823769853299, lat: 45.81746277381915});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.959980506532283, lat: 45.822287359517496});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.959670056128736, lat: 45.822136354542636});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.962437037966474, lat: 45.825859932942954});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.961858034133913, lat: 45.82453034760862});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.962137865079768, lat: 45.82431336719151});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 15.958060096326864, lat: 45.81740480967766});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 18, 16, 56, 9, 273000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.370143614947985, lat: 48.21053364281987});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 20, 19, 51, 28, 542000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 11.717198680799635, lat: 47.352824383501286});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 23, 6, 21, 32, 43000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 11.7162305, lat: 47.3516501});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 11.709880828857424, lat: 47.34548207081111});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 11.716747283935547, lat: 47.3524313534081});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 23, 8, 3, 29, 615000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.020694808075156, lat: 48.307375783924975});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 21, 36, 950000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.02353286743164, lat: 48.30991617804295});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.023466994527391, lat: 48.309502302231074});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.02358137169353, lat: 48.309438153264075});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.02095525278212, lat: 48.30763038819679});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.023495524167561, lat: 48.30924545429841});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.023500680923464, lat: 48.30967399136541});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.023481563574162, lat: 48.309281091368966});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.327915191650394, lat: 48.21586595914765});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.29959106445313, lat: 48.2195260664203});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.32728219032288, lat: 48.21527259679771});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.329631805419925, lat: 48.216094723518204});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.325320577897944, lat: 48.215251149837});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 10, 1, 316000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.32499653652561, lat: 48.21461524560954});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.32602691650391, lat: 48.21289192931539});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.323623657226566, lat: 48.214035807386104});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.325559219562454, lat: 48.212938399859986});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.32557637273929, lat: 48.213135417103494});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.327850818634037, lat: 48.21591600144106});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.36344909667969, lat: 48.21003212234042});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 51, 912000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.324857703485506, lat: 48.21287024876833});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.326501667499546, lat: 48.21356932269602});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.325747057542983, lat: 48.21507091305074});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.325855255126957, lat: 48.21266315063478});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.32448196411133, lat: 48.21209119946136});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.325683593750004, lat: 48.21300631827239});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.329845264577596, lat: 48.17398486964709});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.013803429667831, lat: 48.30778182450183});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.013793772437058, lat: 48.30784676541726});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.013737440109255, lat: 48.3079189095742});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.013801813125612, lat: 48.30786103751585});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.013850092887878, lat: 48.30788244565624});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.013919830322267, lat: 48.30786103751585});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.016666412353517, lat: 48.301579684942});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.025227508861626, lat: 48.31062245133217});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.016151428222658, lat: 48.30340794911666});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.016323089599611, lat: 48.303293762253965});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.025093192543917, lat: 48.31081170818091});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.015464782714844, lat: 48.30260863571332});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.014778137207033, lat: 48.30123835504377});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.016151428222658, lat: 48.30317957513581});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.30142316902446, lat: 48.20477323543262});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 14, 14, 57, 25, 563000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 14.028415899497936, lat: 48.3021661532684});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.053943634033207, lat: 45.906136000569376});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)});
CREATE (n:Illustration {name: '1747401021092.jpg'});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)});
CREATE (n:Illustration {name: '1747401513737.jpg'});
CREATE (n:Place {lon: 16.325730425369144, lat: 48.21576067407827});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.327818529192356, lat: 48.21574085320018});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.4132740025025, lat: 48.174410575409375});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 20.46359067563223, lat: 44.81626554361789});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 22, 9, 41, 4, 220000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.378340721130375, lat: 48.17389901259449});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.399671588248175, lat: 48.2560270287975});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.374971778378963, lat: 48.17540149025967});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: -98.4973312, lat: 29.4125568});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.40413366129111, lat: 48.25335004660456});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 13, 12, 54, 52, 868000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.383469340043366, lat: 48.26025568348867});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.404819488525394, lat: 48.25340894480991});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.404622394660326, lat: 48.25320535012363});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.31143673216106, lat: 48.212357413134775});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.338708400726322, lat: 48.19629153766969});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.33752822875977, lat: 48.198705718192045});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 16.39142990112305, lat: 48.20665734468688});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 6, 24, 13, 13, 25, 626000000, tzinfo=<UTC>)});
CREATE (n:Place {lon: 18.0324667, lat: 59.3173412});
CREATE (n:Observation {date: neo4j.time.DateTime(2025, 10, 15, 14, 32, 14, 379000000, tzinfo=<UTC>)});
MATCH (a {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}), (b {name: 'Pilot'}) CREATE (a)-[:ISSET ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}), (b {value: 'researcher'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}), (b {value: 'tech project manager '}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}), (b {value: 'UI/UX'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}), (b {value: 'technical implementation'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}), (b {value: 'project manager'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}), (b {value: 'research assistant'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'üñç Feel free to share any additional observations, opinions and reflections.', value: 'Is there anything else about this place that you particularly liked or disliked?'}) CREATE (a)-[:ASKS {step: 8.0}]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'Begin by adding a photo of the place you want to share. Then, follow a few steps to share your thoughts about this place with others. Once completed, your contribution will be displayed on the map for everyone to see.', value: 'What do you want to pin to the map?'}) CREATE (a)-[:ASKS {step: 1.0}]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'Beauty reflects how visually appealing and attractive a place is.', value: 'How would you rate the beauty of this space?'}) CREATE (a)-[:ASKS {name: 'beauty', step: 2.0}]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'Sound refers to the pleasantness of noises in a certain place.', value: 'What do you think of the sounds around you?'}) CREATE (a)-[:ASKS {name: 'sound', step: 3.0}]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'Movement shows how easy and convenient it is to move around an area, whether you are walking, cycling, or using a wheelchair.', value: 'How would you rate the movement around this place?'}) CREATE (a)-[:ASKS {name: 'movement', step: 4.0}]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'Protection indicates how safe and protected a place is from traffic and other urban hazards.', value: 'How would you rate the protection in this place?'}) CREATE (a)-[:ASKS {name: 'protection', step: 6.0}]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'Climate comfort reflects how comfortable the climate feels in an area, considering heat, rain cover, wind shelter and more.', value: 'How comfortable do you find the climate here?'}) CREATE (a)-[:ASKS {name: 'climate comfort', step: 5.0}]->(b);
MATCH (a {name: 'Pilot'}), (b {help: 'Activities represent the usability of a place for the citizens.', value: 'How enjoyable are the available activities in this area?'}) CREATE (a)-[:ASKS {name: 'activities', step: 7.0}]->(b);
MATCH (a {help: 'üñç Feel free to share any additional observations, opinions and reflections.', value: 'Is there anything else about this place that you particularly liked or disliked?'}), (b {atype: 'comment'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Begin by adding a photo of the place you want to share. Then, follow a few steps to share your thoughts about this place with others. Once completed, your contribution will be displayed on the map for everyone to see.', value: 'What do you want to pin to the map?'}), (b {atype: 'image'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Beauty reflects how visually appealing and attractive a place is.', value: 'How would you rate the beauty of this space?'}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Unattractive', maxlabel: 'Beautiful'}), (b {help: 'Select one or more tags below.', value: 'Which features of beauty are you rating?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Which features of beauty are you rating?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Buildings'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Colors'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Street Art'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Landmarks'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Plants'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Gardens'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Water'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Cleanliness'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Smell'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {help: 'Sound refers to the pleasantness of noises in a certain place.', value: 'What do you think of the sounds around you?'}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}), (b {help: 'Select one or more tags below.', value: 'Which sounds are you rating?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Which sounds are you rating?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Water'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Wind'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Animals'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Voices'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Crowds'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Children'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Music'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Crowds'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Construction'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {help: 'Movement shows how easy and convenient it is to move around an area, whether you are walking, cycling, or using a wheelchair.', value: 'How would you rate the movement around this place?'}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Poor', maxlabel: 'Excellent'}), (b {help: 'Select one or more tags below.', value: 'Which aspects of movement are you rating?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Which aspects of movement are you rating?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Walking'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Cycling'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Wheelchair access'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Benches'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Stairs'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Sidewalks'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Public transport'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Crosswalks'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Wayfinding'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {help: 'Protection indicates how safe and protected a place is from traffic and other urban hazards.', value: 'How would you rate the protection in this place?'}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Inadequate', maxlabel: 'Adequate'}), (b {help: 'Select one or more tags below.', value: 'Which types of protection are you rating?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Which types of protection are you rating?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Cars'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Visibility'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Traffic signs'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Children safety'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Animal safety'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Lighting'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Pavement quality'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Road condition'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Building condition'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {help: 'Climate comfort reflects how comfortable the climate feels in an area, considering heat, rain cover, wind shelter and more.', value: 'How comfortable do you find the climate here?'}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}), (b {help: 'Select one or more tags below.', value: 'Which types of climate (protection) are you rating?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Which types of climate (protection) are you rating?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Heat'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Humidity'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Airflow'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Shade'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Rain cover'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Wind shelter'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {help: 'Activities represent the usability of a place for the citizens.', value: 'How enjoyable are the available activities in this area?'}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Limited', maxlabel: 'Abundant'}), (b {help: 'Select one or more tags below.', value: 'Which activities are you rating?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Which activities are you rating?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Sports'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Shopping'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Food'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Dog parks'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Playground'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Relaxation'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Friends meetup'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Coffee'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Toilet'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Drinking water'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}), (b {help: 'Select one or more tags below.', value: 'Was beeinflusst Ihre Meinung √ºber die Sicherheit des Raums?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {external: False, name: 'Angelos Chronis'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Angelos Chronis'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Angelos Chronis'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Angelos Chronis'}), (b {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Angelos Chronis'}), (b {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Angelos Chronis'}), (b {value: 'tech project manager '}) CREATE (a)-[:AS ]->(b);
MATCH (a {external: False, name: 'Androniki Pappa'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Androniki Pappa'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Androniki Pappa'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Androniki Pappa'}), (b {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Androniki Pappa'}), (b {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Androniki Pappa'}), (b {value: 'researcher'}) CREATE (a)-[:AS ]->(b);
MATCH (a {external: True, name: 'Aurel Richard'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: True, name: 'Aurel Richard'}), (b {value: 'UI/UX'}) CREATE (a)-[:AS ]->(b);
MATCH (a {external: False, name: 'Stasja Fedorova'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Stasja Fedorova'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Stasja Fedorova'}), (b {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Stasja Fedorova'}), (b {value: 'technical implementation'}) CREATE (a)-[:AS ]->(b);
MATCH (a {external: False, name: 'Eveline Wandl-Vogt'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Eveline Wandl-Vogt'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Eveline Wandl-Vogt'}), (b {value: 'researcher'}) CREATE (a)-[:AS ]->(b);
MATCH (a {external: False, name: 'Domagoj Krhen'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Domagoj Krhen'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Domagoj Krhen'}), (b {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Domagoj Krhen'}), (b {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Domagoj Krhen'}), (b {value: 'research assistant'}) CREATE (a)-[:AS ]->(b);
MATCH (a {external: True, name: 'Bilal Alame'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: True, name: 'Bilal Alame'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: True, name: 'Bilal Alame'}), (b {value: 'researcher'}) CREATE (a)-[:AS ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}), (b {name: 'Mobility'}) CREATE (a)-[:ISSET ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}), (b {value: 'researcher'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}), (b {value: 'tech project manager '}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}), (b {value: 'technical implementation'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}), (b {value: 'project manager'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}), (b {value: 'research assistant'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}), (b {value: 'project manager'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}), (b {value: 'research assistant'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}), (b {value: 'Winner of the EU Sparks for Climate Regional Hackathon Austria & Germany'}) CREATE (a)-[:HAS ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}), (b {value: 'researcher'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}), (b {value: 'tech project manager '}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}), (b {value: 'project manager'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}), (b {value: 'Prize awarded by the Federal Minister of Science, Education and Research (BMBWF), OeAD Director and project lead Lovro Koncar-Gamulin to City Layers citizen scientists.'}) CREATE (a)-[:HAS ]->(b);
MATCH (a {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}), (b {value: 'researcher'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}), (b {value: 'tech project manager '}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}), (b {value: 'technical implementation'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}), (b {value: 'project manager'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {name: 'oead', link: 'https://oead.at/'}), (b {value: 'Prize awarded by the Federal Minister of Science, Education and Research (BMBWF), OeAD Director and project lead Lovro Koncar-Gamulin to City Layers citizen scientists.'}) CREATE (a)-[:RECOGNIZED ]->(b);
MATCH (a {name: 'oead', link: 'https://oead.at/'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'TU Wien', link: 'https://www.tuwien.at/'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'TU Wien', link: 'https://www.tuwien.at/'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'FWF', link: 'https://www.fwf.ac.at/'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'wienxtra', link: 'https://www.wienxtra.at/'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: '√ñsterreich Forscht', link: 'https://www.citizen-science.at/'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: '/images/projects/Urban Observations 2024/0.jpg', caption: 'Urban Observations city walk.'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {name: '/images/projects/Urban Observations 2024/1.jpeg', caption: 'Exploration of urban space and its key features with minors.'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {name: '/images/projects/Urban Observations 2024/2.jpg', caption: 'Interactive data visualisation session at the Data Visualisation Space, TUW.'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {name: '/images/projects/Citizen Science Award 2023/0.jpg', caption: 'Group photo'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {name: '/images/projects/City Layers @Responsive Cities 2023/0.jpg', caption: 'Presentation of the City Layers framework by Lovro Koncar-Gamulin at the Responsive Cities Symposium, Disseny Hub, Barcelona.'}), (b {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {name: '/images/projects/City Layers @Responsive Cities 2023/1.jpeg', caption: 'Responsive Cities Symposium speakers and panelists.'}), (b {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {external: False, name: 'Lovro Koncar-Gamulin'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Lovro Koncar-Gamulin'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Lovro Koncar-Gamulin'}), (b {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Lovro Koncar-Gamulin'}), (b {end_date: neo4j.time.DateTime(2023, 8, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: '4 Cities, 540 Participants, and over 10,000 in-App Contributions.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Lovro Koncar-Gamulin'}), (b {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Lovro Koncar-Gamulin'}), (b {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: False, name: 'Lovro Koncar-Gamulin'}), (b {value: 'project manager'}) CREATE (a)-[:AS ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Was beeinflusst Ihre Meinung √ºber die Sicherheit des Raums?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {name: 'Mobility'}), (b {help: 'Gibt es angemessene verkehrstechnische Ma√ünahmen und st√§dtebauliche Elemente, die die Sicherheit f√ºr Fu√üg√§nger, Radfahrer und Rollstuhlfahrer aller Alters- und Geschlechtsgruppen erh√∂hen?', value: 'Wie sicher f√ºhlt sich dieser Raum an?'}) CREATE (a)-[:ASKS {name: 'Sicherheit', step: 2, lang: 'de'}]->(b);
MATCH (a {name: 'Mobility'}), (b {help: 'Ist der Raum leicht zu finden und auf verschiedene Bewegungsarten zug√§nglich?', value: 'Wie gut ist dieser Raum zu erreichen? '}) CREATE (a)-[:ASKS {name: 'Barrierefreiheit', step: 3, lang: 'de'}]->(b);
MATCH (a {name: 'Mobility'}), (b {help: 'Sind der Raum und seine wichtigen Funktionen f√ºr jeden zug√§nglich, unabh√§ngig von Alter, Geschlecht, k√∂rperlicher oder finanzieller Einschr√§nkung?', value: 'Wie inklusiv ist dieser Raum?'}) CREATE (a)-[:ASKS {name: 'Inklusivit√§t', step: 4, lang: 'de'}]->(b);
MATCH (a {name: 'Mobility'}), (b {help: 'Ist der Raum unabh√§ngig von seiner Ausstattung einladend und √§sthetisch angenehm?', value: 'Wie angenehm und bequem ist dieser Raum?'}) CREATE (a)-[:ASKS {name: 'Erfahrung und Komfort', step: 5, lang: 'de'}]->(b);
MATCH (a {name: 'Mobility'}), (b {help: 'Ist der Raum leicht zu finden und f√ºr verschiedene Fortbewegungsarten zug√§nglich? ', value: 'Wie gut ist dieser Raum mit anderen verbunden?'}) CREATE (a)-[:ASKS {name: 'Verbindung', step: 6, lang: 'de'}]->(b);
MATCH (a {name: 'Mobility'}), (b {help: 'IHRE ANTWORTEN WERDEN ANONYM BLEIBEN.', value: 'K√∂nnen Sie sich mit einer der folgenden Gruppen identifizieren ? Sie k√∂nnen mehr als eine ausw√§hlen.'}) CREATE (a)-[:ASKS {step: 1, lang: 'de'}]->(b);
MATCH (a {help: 'Gibt es angemessene verkehrstechnische Ma√ünahmen und st√§dtebauliche Elemente, die die Sicherheit f√ºr Fu√üg√§nger, Radfahrer und Rollstuhlfahrer aller Alters- und Geschlechtsgruppen erh√∂hen?', value: 'Wie sicher f√ºhlt sich dieser Raum an?'}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'Beleuchtung'}), (b {value: 'Wie ausreichend ist die Beleuchtung?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {atype: 'bool', name: 'Beleuchtung'}), (b {help: '', qtype: 'range'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie ausreichend ist die Beleuchtung?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}), (b {value: 'Gibt es Fu√üg√§nger√ºberwege?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Gibt es Fu√üg√§nger√ºberwege?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {lon: 10.0, lat: 50.0}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 4, 9, 35, 13, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {atype: 'bool', name: 'Pr√§senz der Menschen'}), (b {value: 'Wie angemessen ist die Anzahl der Personen in diesem Raum?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie angemessen ist die Anzahl der Personen in diesem Raum?'}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {lon: 18.083634, lat: 59.313106}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'œÄŒªŒÆœÅŒµŒπœÇ'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'ŒëŒ∏ŒªŒ∑œÑŒπŒ∫ŒøŒØ œáœéœÅŒøŒπ'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'ŒëŒΩŒ¨Œ≥Œ∫Œ∑ Œ≥ŒπŒ± ŒΩŒ≠ŒµœÇ ŒµŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÉŒµŒπœÇ'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ Œ±ŒΩŒ¨Œ≥Œ∫Œ∑', maxlabel: 'ŒºŒµŒ≥Œ¨ŒªŒ∑ Œ±ŒΩŒ¨Œ≥Œ∫Œ∑'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ Œ±œÉœÜŒ±ŒªŒ≠œÇ', maxlabel: 'œÄŒøŒªœç Œ±œÉœÜŒ±ŒªŒ≠œÇ'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Œ¶œâœÑŒπœÉŒºœåœÇ Œ∫Œ±Œπ ŒøœÅŒ±œÑœåœÑŒ∑œÑŒ±'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'ŒµŒªŒªŒπœÄŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'ŒöŒ¨Œ≥Œ∫ŒµŒªŒ± Œ∫Œ±Œπ œÄŒµœÅŒØœÜœÅŒ±ŒæŒ∑'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫Œ≠œÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫œå'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'ŒóœÅŒµŒºŒØŒ± Œ∫Œ±Œπ Œ∏œåœÅœÖŒ≤ŒøœÇ'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {atype: 'bool', name: '√úberwachung'}), (b {value: 'Wird dieser Raum  √ºberwacht?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wird dieser Raum  √ºberwacht?'}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}), (b {value: 'Gibt es physische Schutzma√ünahmen im Raum?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Gibt es physische Schutzma√ünahmen im Raum?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}), (b {lon: 18.083657, lat: 59.313068}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Street Art'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Plants'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Water'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wind'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}), (b {value: 'Wie divers sind die NutzerInnen dieses Raums?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie divers sind die NutzerInnen dieses Raums?'}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Ist der Raum leicht zu finden und auf verschiedene Bewegungsarten zug√§nglich?', value: 'Wie gut ist dieser Raum zu erreichen? '}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}), (b {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Barrierefreiheit des Raums?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Barrierefreiheit des Raums?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'Rampen und Aufz√ºge'}), (b {value: 'Gibt es Rampen und Aufz√ºge in diesem Raum?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Gibt es Rampen und Aufz√ºge in diesem Raum?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)}), (b {lon: 18.083634, lat: 59.313106}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 11, 30, 18, 48, 38, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}), (b {value: 'Wie gut sind die Treppen und stufenlosen Wege?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie gut sind die Treppen und stufenlosen Wege?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Beschilderung'}), (b {value: 'Wie gut sind die Schilder an diesem Ort? '}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie gut sind die Schilder an diesem Ort? '}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 10, 24, 28, 790000000, tzinfo=<UTC>)}), (b {lon: 18.0627297, lat: 59.3326423}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 10, 24, 28, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 10, 24, 28, 790000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 10, 24, 28, 790000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {atype: 'bool', name: 'physische Barrieren'}), (b {value: 'Gibt es physische Barrieren in diesem Raum?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Gibt es physische Barrieren in diesem Raum?'}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}), (b {value: 'Wie breit sind die Fu√üg√§ngerwege an dieser Stelle?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie breit sind die Fu√üg√§ngerwege an dieser Stelle?'}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {lon: 16.352403, lat: 48.1910567}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '1'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 18, 27, 309000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {atype: 'bool', name: 'Fahrradwege'}), (b {value: 'Wie gut sind die Radwege an diesem Ort?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie gut sind die Radwege an diesem Ort?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 19, 18, 852000000, tzinfo=<UTC>)}), (b {lon: 16.352403, lat: 48.1910567}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 19, 18, 852000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 19, 18, 852000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 19, 18, 852000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {lon: 16.388723829154323, lat: 48.206863988959206}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '49'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 15, 51, 22, 163000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 18, 7, 43, 402000000, tzinfo=<UTC>)}), (b {lon: 18.0092694, lat: 59.3369308}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 18, 7, 43, 402000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 18, 7, 43, 402000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 18, 7, 43, 402000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 18, 7, 43, 402000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 2, 18, 7, 43, 402000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {value: 'Gibt es Rampen und Aufz√ºge in diesem Raum?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {lon: 16.371289591922746, lat: 48.229876688809505}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 17, 51, 673000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {lon: 16.391428691122687, lat: 48.20657787651979}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 3, 8, 27, 44, 798000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 12, 48, 46, 368000000, tzinfo=<UTC>)}), (b {lon: 10.0, lat: 50.0}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 12, 48, 46, 368000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 12, 48, 46, 368000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 12, 48, 46, 368000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {lon: 16.369135092499246, lat: 48.23249014216553}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '40'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 27, 38, 475000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {lon: 16.3694765, lat: 48.2326724}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '6'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '2'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '5'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 29, 13, 719000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 30, 3, 411000000, tzinfo=<UTC>)}), (b {lon: 16.369488, lat: 48.2328346}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 30, 3, 411000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 30, 3, 411000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 30, 3, 411000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {lon: 16.369488, lat: 48.2328346}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '99'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 13, 32, 31, 412000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {lon: 16.3713024, lat: 48.2304501}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 34, 2, 470000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {lon: 16.37097189726785, lat: 48.23038542986666}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 35, 42, 928000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {help: 'Sind der Raum und seine wichtigen Funktionen f√ºr jeden zug√§nglich, unabh√§ngig von Alter, Geschlecht, k√∂rperlicher oder finanzieller Einschr√§nkung?', value: 'Wie inklusiv ist dieser Raum?'}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}), (b {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Inklusivit√§t des Raums?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Inklusivit√§t des Raums?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}), (b {help: '(z. B. unterschiedlichen Alters, Geschlechts, ethnischer Zugeh√∂rigkeit, beruflichem und finanziellem Hintergrund)', value: 'Wie unterschiedlich sind die sozialen Gruppen in diesem Raum?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '(z. B. unterschiedlichen Alters, Geschlechts, ethnischer Zugeh√∂rigkeit, beruflichem und finanziellem Hintergrund)', value: 'Wie unterschiedlich sind die sozialen Gruppen in diesem Raum?'}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}), (b {value: 'Wie gut sind die Einrichtungen f√ºr Menschen mit Behinderungen?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie gut sind die Einrichtungen f√ºr Menschen mit Behinderungen?'}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}), (b {value: 'Wie sensibel ist dieser Raum f√ºr Menschen mit unterschiedlichem kulturellen Hintergrund?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie sensibel ist dieser Raum f√ºr Menschen mit unterschiedlichem kulturellen Hintergrund?'}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Kosten'}), (b {value: 'Wie erschwinglich ist der Zugang zu diesem Raum und seinen Einrichtungen?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie erschwinglich ist der Zugang zu diesem Raum und seinen Einrichtungen?'}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}), (b {value: 'Wie gut sind die Einrichtungen f√ºr Kinder oder Familien hier?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie gut sind die Einrichtungen f√ºr Kinder oder Familien hier?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}), (b {value: 'Gibt es Einrichtungen f√ºr SeniorInnen hier?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Gibt es Einrichtungen f√ºr SeniorInnen hier?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Ist der Raum unabh√§ngig von seiner Ausstattung einladend und √§sthetisch angenehm?', value: 'Wie angenehm und bequem ist dieser Raum?'}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}), (b {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Erfahrung und den Komfort des Raums?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Erfahrung und den Komfort des Raums?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'Sauberkeit'}), (b {help: '(z. B. unterschiedlichen Alters, Geschlechts, ethnischer Zugeh√∂rigkeit, beruflichem und finanziellem Hintergrund)', value: 'Wie sauber ist der Ort?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '(z. B. unterschiedlichen Alters, Geschlechts, ethnischer Zugeh√∂rigkeit, beruflichem und finanziellem Hintergrund)', value: 'Wie sauber ist der Ort?'}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}), (b {value: 'Gibt es mehrere Nutzungsm√∂glichkeiten f√ºr den Raum?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Gibt es mehrere Nutzungsm√∂glichkeiten f√ºr den Raum?'}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'soziale Aktivit√§t'}), (b {value: 'Wie empfinden Sie die soziale Aktivit√§t an diesem Ort?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie empfinden Sie die soziale Aktivit√§t an diesem Ort?'}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Natur und Gr√ºnraum'}), (b {value: 'Gibt es Gr√ºnfl√§chen und Natur an diesem Ort?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Gibt es Gr√ºnfl√§chen und Natur an diesem Ort?'}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Stadtm√∂bel'}), (b {help: '(z. B. B√§nke, Sonnenschutz, Ausstattung)', value: 'Gibt es Stadtm√∂bel an diesem Ort? '}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '(z. B. B√§nke, Sonnenschutz, Ausstattung)', value: 'Gibt es Stadtm√∂bel an diesem Ort? '}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Sinneserfahrung'}), (b {help: '(z. B. L√§rm, Ger√ºche, Ausblicke, Materialien)', value: 'Wie empfinden Sie die sensorische Erfahrung in diesem Raum?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '(z. B. L√§rm, Ger√ºche, Ausblicke, Materialien)', value: 'Wie empfinden Sie die sensorische Erfahrung in diesem Raum?'}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Ist der Raum leicht zu finden und f√ºr verschiedene Fortbewegungsarten zug√§nglich? ', value: 'Wie gut ist dieser Raum mit anderen verbunden?'}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}), (b {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Verbindung des Ortes?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'Select one or more tags below.', value: 'Welche Faktoren beeinflussen Ihre Meinung √ºber die Verbindung des Ortes?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}), (b {help: '(z. B. zu Fu√ü, mit dem Fahrrad, auf dem Rollstuhl, mit √∂ffentlichen Verkehrsmitteln, mit privaten Fahrzeugen)', value: 'Wie leicht k√∂nnen die Menschen mit unterschiedlichen Mobilit√§tsoptionen diesen Ort erreichen?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '(z. B. zu Fu√ü, mit dem Fahrrad, auf dem Rollstuhl, mit √∂ffentlichen Verkehrsmitteln, mit privaten Fahrzeugen)', value: 'Wie leicht k√∂nnen die Menschen mit unterschiedlichen Mobilit√§tsoptionen diesen Ort erreichen?'}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}), (b {value: 'Wie nah ist die n√§chste Haltestelle f√ºr √∂ffentliche Verkehrsmittel?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie nah ist die n√§chste Haltestelle f√ºr √∂ffentliche Verkehrsmittel?'}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}), (b {help: '(z. B. Verf√ºgbarkeit von Fahrr√§dern, Motorrollern, Carsharing)', value: 'Wie stehen die nachhaltigen Transportm√∂glichkeiten an diesem Standort?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '(z. B. Verf√ºgbarkeit von Fahrr√§dern, Motorrollern, Carsharing)', value: 'Wie stehen die nachhaltigen Transportm√∂glichkeiten an diesem Standort?'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}), (b {help: '(Wartezeiten, Real-time informationen, Entfernung zwischen den Haltestellen, einfacher Fahrkartenkauf)', value: 'Wie einfach ist es, zwischen den Mobilit√§tsmodi zu wechseln?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '(Wartezeiten, Real-time informationen, Entfernung zwischen den Haltestellen, einfacher Fahrkartenkauf)', value: 'Wie einfach ist es, zwischen den Mobilit√§tsmodi zu wechseln?'}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Beschilderung'}), (b {value: 'Wie gut ist dieser Ort beschildert?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie gut ist dieser Ort beschildert?'}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}), (b {value: 'Wie bequem sind die Transportm√∂glichkeiten an diesem Ort?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Wie bequem sind die Transportm√∂glichkeiten an diesem Ort?'}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'IHRE ANTWORTEN WERDEN ANONYM BLEIBEN.', value: 'K√∂nnen Sie sich mit einer der folgenden Gruppen identifizieren ? Sie k√∂nnen mehr als eine ausw√§hlen.'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'm√∂chte lieber nicht sagen'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ein Kind'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ein Senior'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'eine Person mit Bewegungsschwierigkeiten'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'eine Neurodivergente Person'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ein Elternteil'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'eine Betreuungsperson'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'm√∂chte lieber nicht sagen'}), (b {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'zu Fu√ü'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Radfahren'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Rollstuhlfahren'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: '√∂ffentliche Verkehrsmittel'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Privatfahrzeug'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'ein Kind'}), (b {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {atype: 'bool', name: 'ein Senior'}), (b {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {atype: 'bool', name: 'eine Person mit Bewegungsschwierigkeiten'}), (b {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {atype: 'bool', name: 'eine Neurodivergente Person'}), (b {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {atype: 'bool', name: 'ein Elternteil'}), (b {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {atype: 'bool', name: 'eine Betreuungsperson'}), (b {value: 'W√§hlen Sie bitte nun das Hauptmobilit√§tsmittel aus, das Sie benutzt haben, um Ihren aktuellen Standort zu erreichen:'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {name: '1732471265498.jpg'}), (b {date: neo4j.time.DateTime(2024, 11, 24, 18, 1, 5, 449000000, tzinfo=<UTC>)}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {external: True, name: 'Firas Saffieddine'}), (b {subtitle: 'Contribution to the Topic of Co-Design and Living.', name: 'City Layers @Responsive Cities 2023'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {external: True, name: 'Firas Saffieddine'}), (b {value: 'technical implementation'}) CREATE (a)-[:AS ]->(b);
MATCH (a {external: True, name: 'Andrea Wiesinger'}), (b {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}) CREATE (a)-[:WORKEDON ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {lon: 16.37096973885488, lat: 48.2304248564018}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 6, 810000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {name: 'IMPETUS', link: 'https://impetus4cs.eu/'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'IMPETUS', link: 'https://impetus4cs.eu/'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'IMPETUS', link: 'https://impetus4cs.eu/'}), (b {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'EU Sparks', link: 'https://eusparks.eu/'}), (b {value: 'Winner of the EU Sparks for Climate Regional Hackathon Austria & Germany'}) CREATE (a)-[:RECOGNIZED ]->(b);
MATCH (a {name: 'EU Sparks', link: 'https://eusparks.eu/'}), (b {end_date: neo4j.time.DateTime(2024, 10, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'City Layers for Greener Cities.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'KinderUni', link: 'https://kinderuni.at/'}), (b {end_date: neo4j.time.DateTime(2024, 7, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'From Individual Observations to Collective Knowledge.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: 'Community Creates Mobility', link: 'https://www.mobility.community/en/home/'}), (b {end_date: neo4j.time.DateTime(2025, 1, 31, 18, 0, 0, 142000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Empowering Urban Mobility Through Collective Intelligence.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {lon: 16.370948553177165, lat: 48.23046386876552}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 36, 30, 639000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)}), (b {lon: 16.37118904069878, lat: 48.229910016703094}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 41, 50, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {lon: 16.370877707704146, lat: 48.2297903188459}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '40'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 44, 23, 357000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {lon: 16.371058893217153, lat: 48.22984867308278}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '1'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 47, 35, 417000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {name: '1732471032689.jpg'}), (b {date: neo4j.time.DateTime(2024, 11, 24, 17, 57, 13, 473000000, tzinfo=<UTC>)}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {lon: 16.3714665, lat: 48.2298777}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '45'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 13, 949000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {lon: 16.37112237914667, lat: 48.22976595122806}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 14, 59, 26, 633000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {help: '', qtype: 'range'}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'ŒûŒµŒ∫ŒØŒΩŒ± œÄœÅŒøœÉŒ∏Œ≠œÑŒøŒΩœÑŒ±œÇ ŒºŒπŒ± œÜœâœÑŒøŒ≥œÅŒ±œÜŒØŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ œÄŒøœÖ Œ∏Œ≠ŒªŒµŒπœÇ ŒΩŒ± œáŒ±œÅœÑŒøŒ≥œÅŒ±œÜŒÆœÉŒµŒπœÇ. Œ£œÑŒ∑ œÉœÖŒΩŒ≠œáŒµŒπŒ±, Œ±Œ∫ŒøŒªŒøœçŒ∏Œ∑œÉŒµ ŒºŒµœÅŒπŒ∫Œ¨ Œ≤ŒÆŒºŒ±œÑŒ± Œ≥ŒπŒ± ŒΩŒ± ŒºŒøŒπœÅŒ±œÉœÑŒµŒØœÇ œÑŒπœÇ œÉŒ∫Œ≠œàŒµŒπœÇ œÉŒøœÖ Œ≥ŒπŒ± œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå. Œ£œÑŒø œÑŒ≠ŒªŒøœÇ, Œ∑ œÉœÖŒΩŒµŒπœÉœÜŒøœÅŒ¨ œÉŒøœÖ Œ∏Œ± ŒµŒºœÜŒ±ŒΩŒπœÉœÑŒµŒØ œÉœÑŒø œáŒ¨œÅœÑŒ∑ Œ∫Œ±Œπ Œ∏Œ± ŒµŒØŒΩŒ±Œπ ŒøœÅŒ±œÑŒÆ œÉŒµ œåŒªŒøœÖœÇ.', value: 'Œ§Œπ Œ∏Œ≠ŒªŒµŒπœÇ ŒΩŒ± œáŒ±œÅœÑŒøŒ≥œÅŒ±œÜŒÆœÉŒµŒπœÇ?'}) CREATE (a)-[:ASKS {name: '', step: 1}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'ŒîœÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ∫Œ±Œπ œáœÅŒÆœÉŒµŒπœÇ œÄŒøœÖ Œ≥ŒØŒΩŒøŒΩœÑŒ±Œπ œÉœÑŒøŒΩ œáœéœÅŒø', value: 'Œ†œéœÇ Œ∏Œ± Œ±ŒæŒπŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒπœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÄŒøœÖ Œ≥ŒØŒΩŒøŒΩœÑŒ±Œπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:ASKS {name: 'ŒßœÅŒÆœÉŒµŒπœÇ œÑŒøœÖ œáœéœÅŒøœÖ', step: 2.0}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'Œó œÉœÖŒΩŒøŒªŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ∫Œ±Œπ Œ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫ŒÆ œÑŒøœÖ œáœéœÅŒøœÖ', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒ∑ Œ≥ŒµŒΩŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒøœÖ œáœéœÅŒøœÖ ŒµŒ¥œé?'}) CREATE (a)-[:ASKS {name: 'Œ†ŒøŒπœåœÑŒ∑œÑŒ± œáœéœÅŒøœÖ', step: 3.0}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'ŒöŒ±œÑŒ±œÉŒ∫ŒµœÖŒ≠œÇ Œ∫Œ±Œπ ŒµŒæŒøœÄŒªŒπœÉŒºœåœÇ œÄŒøœÖ œÖœÄŒ¨œÅœáŒøœÖŒΩ œÉœÑŒøŒΩ œáœéœÅŒø', value: 'Œ†œéœÇ Œ±ŒæŒπŒøŒªŒøŒ≥ŒµŒØœÇ œÑŒπœÇ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:ASKS {name: 'Œ•œÄŒøŒ¥ŒøŒºŒ≠œÇ Œ∫Œ±Œπ ŒµŒæŒøœÄŒªŒπœÉŒºœåœÇ', step: 4}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'Œó Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± œÄœÅœåœÉŒ≤Œ±œÉŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ≠ŒªŒµœÖœÉŒ∑œÇ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒ∑ŒΩ œÄœÅŒøœÉŒ≤Œ±œÉŒπŒºœåœÑŒ∑œÑŒ± Œ±œÖœÑŒøœç œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ?'}) CREATE (a)-[:ASKS {name: 'Œ†œÅŒøœÉŒ≤Œ±œÉŒπŒºœåœÑŒ∑œÑŒ±', step: 5}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'ŒëŒØœÉŒ∏Œ∑ŒºŒ± Œ±œÉœÜŒ¨ŒªŒµŒπŒ±œÇ Œ∫Œ±œÑŒ¨ œÑŒ∑ Œ¥ŒπŒ¨œÅŒ∫ŒµŒπŒ± œÑŒ∑œÇ œÄŒ±œÅŒ±ŒºŒøŒΩŒÆœÇ', value: 'Œ†œåœÉŒø Œ±œÉœÜŒ±ŒªŒ≠œÇ Œ∏ŒµœâœÅŒµŒØœÇ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:ASKS {name: 'ŒëœÉœÜŒ¨ŒªŒµŒπŒ±', step: 6}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'Œ§Œø œÜœÖœÉŒπŒ∫œå œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ Œ∫Œ±Œπ œÑŒø ŒºŒπŒ∫œÅŒøŒ∫ŒªŒØŒºŒ± œÑŒ∑œÇ œÄŒµœÅŒπŒøœáŒÆœÇ', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒø œÜœÖœÉŒπŒ∫œå œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ Œ±œÖœÑŒøœç œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ?'}) CREATE (a)-[:ASKS {name: 'Œ†ŒµœÅŒπŒ≤Œ±ŒªŒªŒøŒΩœÑŒπŒ∫Œ¨ œÉœÑŒøŒπœáŒµŒØŒ±', step: 7}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: 'ŒïœÖŒ∫Œ±ŒπœÅŒØŒµœÇ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ Œ∫Œ±Œπ œÉœÖŒΩŒ±ŒΩŒ±œÉœÑœÅŒøœÜŒ≠œÇ', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:ASKS {name: 'ŒöŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ±ŒªŒªŒ∑ŒªŒµœÄŒØŒ¥œÅŒ±œÉŒ∑', step: 8}]->(b);
MATCH (a {name: 'Kalamata'}), (b {help: ':lower_left_crayon: ŒúœÄŒøœÅŒµŒØœÇ ŒΩŒ± Œ≥œÅŒ¨œàŒµŒπœÇ ŒµœÄŒπœÄŒªŒ≠ŒøŒΩ œÉœáœåŒªŒπŒ±, œÉœÖŒΩŒ±ŒπœÉŒ∏ŒÆŒºŒ±œÑŒ± Œ∫Œ±Œπ œÄŒ±œÅŒ±œÑŒ∑œÅŒÆœÉŒµŒπœÇ.', value: 'ŒòŒ± ŒÆŒ∏ŒµŒªŒµœÇ ŒΩŒ± œÄœÅŒøœÉŒ∏Œ≠œÉŒµŒπœÇ Œ∫Œ¨œÑŒπ Œ±Œ∫œåŒºŒ± Œ≥ŒπŒ± Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø œÄŒøœÖ Œ≤œÅŒØœÉŒ∫ŒµŒπœÇ ŒπŒ¥ŒπŒ±ŒØœÑŒµœÅŒ± Œ∫Œ±Œªœå ŒÆ Œ∫Œ±Œ∫œå?'}) CREATE (a)-[:ASKS {step: 9}]->(b);
MATCH (a {help: 'ŒûŒµŒ∫ŒØŒΩŒ± œÄœÅŒøœÉŒ∏Œ≠œÑŒøŒΩœÑŒ±œÇ ŒºŒπŒ± œÜœâœÑŒøŒ≥œÅŒ±œÜŒØŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ œÄŒøœÖ Œ∏Œ≠ŒªŒµŒπœÇ ŒΩŒ± œáŒ±œÅœÑŒøŒ≥œÅŒ±œÜŒÆœÉŒµŒπœÇ. Œ£œÑŒ∑ œÉœÖŒΩŒ≠œáŒµŒπŒ±, Œ±Œ∫ŒøŒªŒøœçŒ∏Œ∑œÉŒµ ŒºŒµœÅŒπŒ∫Œ¨ Œ≤ŒÆŒºŒ±œÑŒ± Œ≥ŒπŒ± ŒΩŒ± ŒºŒøŒπœÅŒ±œÉœÑŒµŒØœÇ œÑŒπœÇ œÉŒ∫Œ≠œàŒµŒπœÇ œÉŒøœÖ Œ≥ŒπŒ± œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå. Œ£œÑŒø œÑŒ≠ŒªŒøœÇ, Œ∑ œÉœÖŒΩŒµŒπœÉœÜŒøœÅŒ¨ œÉŒøœÖ Œ∏Œ± ŒµŒºœÜŒ±ŒΩŒπœÉœÑŒµŒØ œÉœÑŒø œáŒ¨œÅœÑŒ∑ Œ∫Œ±Œπ Œ∏Œ± ŒµŒØŒΩŒ±Œπ ŒøœÅŒ±œÑŒÆ œÉŒµ œåŒªŒøœÖœÇ.', value: 'Œ§Œπ Œ∏Œ≠ŒªŒµŒπœÇ ŒΩŒ± œáŒ±œÅœÑŒøŒ≥œÅŒ±œÜŒÆœÉŒµŒπœÇ?'}), (b {atype: 'image'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'ŒîœÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ∫Œ±Œπ œáœÅŒÆœÉŒµŒπœÇ œÄŒøœÖ Œ≥ŒØŒΩŒøŒΩœÑŒ±Œπ œÉœÑŒøŒΩ œáœéœÅŒø', value: 'Œ†œéœÇ Œ∏Œ± Œ±ŒæŒπŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒπœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÄŒøœÖ Œ≥ŒØŒΩŒøŒΩœÑŒ±Œπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'œÄŒøŒªœç œÄŒµœÅŒπŒøœÅŒπœÉŒºŒ≠ŒΩŒµœÇ', maxlabel: 'œÄŒøŒªœç œÄŒªŒøœçœÉŒπŒµœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'œÄŒøŒªœç œÄŒµœÅŒπŒøœÅŒπœÉŒºŒ≠ŒΩŒµœÇ', maxlabel: 'œÄŒøŒªœç œÄŒªŒøœçœÉŒπŒµœÇ'}), (b {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒµœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒπœÇ œáœÅŒÆœÉŒµŒπœÇ œÑŒøœÖ œáœéœÅŒøœÖ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒµœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒπœÇ œáœÅŒÆœÉŒµŒπœÇ œÑŒøœÖ œáœéœÅŒøœÖ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒÜŒ∏ŒªŒ∑œÉŒ∑'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†ŒµœÅŒØœÄŒ±œÑŒøœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒßŒ±ŒªŒ¨œÅœâœÉŒ∑'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†Œ±ŒπœáŒΩŒØŒ¥Œπ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒ±œÜŒ≠œÇ Œ∫Œ±Œπ œÜŒ±Œ≥Œ∑œÑœå'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒïŒ∫Œ¥Œ∑ŒªœéœÉŒµŒπœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒïŒºœÄŒøœÅŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†ŒøŒªŒπœÑŒπœÉœÑŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†ŒµœÅŒπŒ≤Œ±ŒªŒªŒøŒΩœÑŒπŒ∫Œ≠œÇ Œ¥œÅŒ¨œÉŒµŒπœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'ŒÜŒ∏ŒªŒ∑œÉŒ∑'}), (b {help: '', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ¨Œ∏ŒªŒ∑œÉŒ∑ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ¨Œ∏ŒªŒ∑œÉŒ∑ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†ŒµœÅŒØœÄŒ±œÑŒøœÇ'}), (b {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± Œ≥ŒπŒ± œÄŒµœÅŒØœÄŒ±œÑŒø ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± Œ≥ŒπŒ± œÄŒµœÅŒØœÄŒ±œÑŒø ŒµŒ¥œé?'}), (b {minlabel: 'Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'Œ¨ŒΩŒµœÑŒ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒßŒ±ŒªŒ¨œÅœâœÉŒ∑'}), (b {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÉŒ∑ŒºŒµŒØŒ± Œ≥ŒπŒ± ŒæŒµŒ∫ŒøœçœÅŒ±œÉŒ∑ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÉŒ∑ŒºŒµŒØŒ± Œ≥ŒπŒ± ŒæŒµŒ∫ŒøœçœÅŒ±œÉŒ∑ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒ≠œÄŒ±œÅŒ∫œÑŒ±', maxlabel: 'œÄŒøŒªŒªŒ¨'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†Œ±ŒπœáŒΩŒØŒ¥Œπ'}), (b {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒøŒΩ œáœéœÅŒø Œ≥ŒπŒ± œÄŒ±ŒπœáŒΩŒØŒ¥Œπ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒøŒΩ œáœéœÅŒø Œ≥ŒπŒ± œÄŒ±ŒπœáŒΩŒØŒ¥Œπ ŒµŒ¥œé?'}), (b {minlabel: 'Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøœÇ', maxlabel: 'Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒ±œÜŒ≠œÇ Œ∫Œ±Œπ œÜŒ±Œ≥Œ∑œÑœå'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫Œ±œÜŒ≠ Œ∫Œ±Œπ œÜŒ±Œ≥Œ∑œÑœå ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫Œ±œÜŒ≠ Œ∫Œ±Œπ œÜŒ±Œ≥Œ∑œÑœå ŒµŒ¥œé?'}), (b {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒïŒ∫Œ¥Œ∑ŒªœéœÉŒµŒπœÇ'}), (b {help: 'œÄ.œá. œÉœÖŒΩŒ±œÖŒªŒØŒµœÇ, œÜŒµœÉœÑŒπŒ≤Œ¨Œª', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± ŒµŒ∫Œ¥Œ∑ŒªœéœÉŒµŒπœÇ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. œÉœÖŒΩŒ±œÖŒªŒØŒµœÇ, œÜŒµœÉœÑŒπŒ≤Œ¨Œª', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± ŒµŒ∫Œ¥Œ∑ŒªœéœÉŒµŒπœÇ ŒµŒ¥œé?'}), (b {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒïŒºœÄŒøœÅŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ'}), (b {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒπœÇ ŒµŒºœÄŒøœÅŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒπœÇ ŒµŒºœÄŒøœÅŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'}), (b {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒµœÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†ŒøŒªŒπœÑŒπœÉœÑŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ'}), (b {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒπœÇ œÄŒøŒªŒπœÑŒπœÉœÑŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒπœÇ œÄŒøŒªŒπœÑŒπœÉœÑŒπŒ∫Œ≠œÇ œáœÅŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'}), (b {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒµœÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†ŒµœÅŒπŒ≤Œ±ŒªŒªŒøŒΩœÑŒπŒ∫Œ≠œÇ Œ¥œÅŒ¨œÉŒµŒπœÇ'}), (b {help: '', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± œÄŒµœÅŒπŒ≤Œ±ŒªŒªŒøŒΩœÑŒπŒ∫Œ≠œÇ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± œÄŒµœÅŒπŒ≤Œ±ŒªŒªŒøŒΩœÑŒπŒ∫Œ≠œÇ ŒµŒ¥œé?'}), (b {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒµœÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Œó œÉœÖŒΩŒøŒªŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ∫Œ±Œπ Œ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫ŒÆ œÑŒøœÖ œáœéœÅŒøœÖ', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒ∑ Œ≥ŒµŒΩŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒøœÖ œáœéœÅŒøœÖ ŒµŒ¥œé?'}), (b {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'Œ¨œÅŒπœÉœÑŒ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'Œ¨œÅŒπœÉœÑŒ∑'}), (b {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ œÄŒøŒπœåœÑŒ∑œÑŒ± œÑŒøœÖ œáœéœÅŒøœÖ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ œÄŒøŒπœåœÑŒ∑œÑŒ± œÑŒøœÖ œáœéœÅŒøœÖ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒ±Œ∏Œ±œÅŒπœåœÑŒ∑œÑŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒúœÖœÅœâŒ¥ŒπŒ¨'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ¥Œ≠ŒΩœÑœÅœâŒΩ Œ∫Œ±Œπ œÜœÖœÑœéŒΩ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒüŒºŒøœÅœÜŒπŒ¨ œÑŒøœÖ œÑŒøœÄŒØŒøœÖ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ£œÄŒ±œÉŒºŒ≠ŒΩŒ± ŒÆ ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± œÉŒ∑ŒºŒµŒØŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ•ŒªŒπŒ∫Œ¨ Œ∫Œ±Œπ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÉŒ∑ŒºŒµŒØŒøœÖ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒâœáŒøŒπ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒ±Œ∏Œ±œÅŒπœåœÑŒ∑œÑŒ±'}), (b {help: '', value: 'Œ†œåœÉŒø Œ∫Œ±Œ∏Œ±œÅœå ŒµŒØŒΩŒ±Œπ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ†œåœÉŒø Œ∫Œ±Œ∏Œ±œÅœå ŒµŒØŒΩŒ±Œπ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'œÄŒøŒªœç Œ≤œÅœéŒºŒπŒ∫Œø', maxlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∏Œ±œÅœå'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒúœÖœÅœâŒ¥ŒπŒ¨'}), (b {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œ∑ ŒºœÖœÅœâŒ¥ŒπŒ¨ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œ∑ ŒºœÖœÅœâŒ¥ŒπŒ¨ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'œÄŒøŒªœç Œ¨œÉœáŒ∑ŒºŒ∑', maxlabel: 'œÖœÄŒ≠œÅŒøœáŒ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Œ¥Œ≠ŒΩœÑœÅœâŒΩ Œ∫Œ±Œπ œÜœÖœÑœéŒΩ'}), (b {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒ± Œ¥Œ≠ŒΩœÑœÅŒ± Œ∫Œ±Œπ œÑŒ± œÜœÖœÑŒ¨ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒ± Œ¥Œ≠ŒΩœÑœÅŒ± Œ∫Œ±Œπ œÑŒ± œÜœÖœÑŒ¨ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ∫Œ±œÑŒµœÉœÑœÅŒ±ŒºŒºŒ≠ŒΩŒ±', maxlabel: 'œÖŒ≥ŒπŒÆ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒüŒºŒøœÅœÜŒπŒ¨ œÑŒøœÖ œÑŒøœÄŒØŒøœÖ'}), (b {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫ŒÆ œÑŒøœÖ œÑŒøœÄŒØŒøœÖ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫ŒÆ œÑŒøœÖ œÑŒøœÄŒØŒøœÖ ŒµŒ¥œé?'}), (b {minlabel: 'Œ±ŒΩœÑŒπŒ±ŒπœÉŒ∏Œ∑œÑŒπŒ∫œå', maxlabel: 'œÄŒ±ŒΩŒ≠ŒºŒøœÅœÜŒø'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ£œÄŒ±œÉŒºŒ≠ŒΩŒ± ŒÆ ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± œÉŒ∑ŒºŒµŒØŒ±'}), (b {help: 'œÄ.œá. œÉœÄŒ±œÉŒºŒ≠ŒΩŒ± œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ±, ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÉŒ∑ŒºŒµŒØŒ± œÄŒøœÖ Œ∏ŒµœâœÅŒµŒØœÇ ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± ŒÆ Œ∫Œ±œÑŒµœÉœÑœÅŒ±ŒºŒºŒ≠ŒΩŒ± ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. œÉœÄŒ±œÉŒºŒ≠ŒΩŒ± œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ±, ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÉŒ∑ŒºŒµŒØŒ± œÄŒøœÖ Œ∏ŒµœâœÅŒµŒØœÇ ŒµœÄŒπŒ∫ŒØŒΩŒ¥œÖŒΩŒ± ŒÆ Œ∫Œ±œÑŒµœÉœÑœÅŒ±ŒºŒºŒ≠ŒΩŒ± ŒµŒ¥œé?'}), (b {minlabel: 'œÄŒøŒªŒªŒ¨', maxlabel: 'Œ∫Œ±ŒΩŒ≠ŒΩŒ±'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ•ŒªŒπŒ∫Œ¨ Œ∫Œ±Œπ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÉŒ∑ŒºŒµŒØŒøœÖ'}), (b {help: 'œÄ.œá. œÖŒªŒπŒ∫Œ¨ Œ¥Œ±œÄŒ≠Œ¥ŒøœÖ', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ œÄŒøŒπœåœÑŒ∑œÑŒ± œÑœâŒΩ œÖœÄŒøŒ¥ŒøŒºœéŒΩ?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. œÖŒªŒπŒ∫Œ¨ Œ¥Œ±œÄŒ≠Œ¥ŒøœÖ', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ œÄŒøŒπœåœÑŒ∑œÑŒ± œÑœâŒΩ œÖœÄŒøŒ¥ŒøŒºœéŒΩ?'}), (b {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'œÄŒøŒªœç Œ∫Œ±ŒªŒÆ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒâœáŒøŒπ'}), (b {help: '', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ ŒÆœáŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ ŒÆœáŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'œÄŒøŒªœç Œ¥œÖœÉŒ¨œÅŒµœÉœÑŒøŒπ', maxlabel: 'œÄŒøŒªœç ŒµœÖœáŒ¨œÅŒπœÉœÑŒøŒπ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'ŒöŒ±œÑŒ±œÉŒ∫ŒµœÖŒ≠œÇ Œ∫Œ±Œπ ŒµŒæŒøœÄŒªŒπœÉŒºœåœÇ œÄŒøœÖ œÖœÄŒ¨œÅœáŒøœÖŒΩ œÉœÑŒøŒΩ œáœéœÅŒø', value: 'Œ†œéœÇ Œ±ŒæŒπŒøŒªŒøŒ≥ŒµŒØœÇ œÑŒπœÇ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'œÄŒªŒÆœÅŒµŒπœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'œÄŒªŒÆœÅŒµŒπœÇ'}), (b {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒπœÇ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ Œ∫Œ±Œπ œÑŒøŒΩ ŒµŒæŒøœÄŒªŒπœÉŒºœå œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒπœÇ œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ Œ∫Œ±Œπ œÑŒøŒΩ ŒµŒæŒøœÄŒªŒπœÉŒºœå œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†Œ±ŒπŒ¥ŒπŒ∫Œ≠œÇ œáŒ±œÅŒ≠œÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒëŒ∏ŒªŒ∑œÑŒπŒ∫ŒøŒØ œáœéœÅŒøŒπ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒîŒ∑ŒºœåœÉŒπŒµœÇ œÑŒøœÖŒ±ŒªŒ≠œÑŒµœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†Œ±Œ≥Œ∫Œ¨Œ∫ŒπŒ± Œ∫Œ±Œπ œÉœÑŒ≠Œ≥Œ±œÉœÑœÅŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ£œÑŒøŒπœáŒµŒØŒ± œÑŒ≠œáŒΩŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ±Œ∫œåœÉŒºŒ∑œÉŒ∑œÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒªŒµŒπœÉœÑŒøŒØ œáœéœÅŒøŒπ ŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπŒøœÑŒÆœÑœâŒΩ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒëŒΩŒ¨Œ≥Œ∫Œ∑ Œ≥ŒπŒ± ŒΩŒ≠ŒµœÇ ŒµŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÉŒµŒπœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†Œ±ŒπŒ¥ŒπŒ∫Œ≠œÇ œáŒ±œÅŒ≠œÇ'}), (b {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒ∑œÇ œÄŒ±ŒπŒ¥ŒπŒ∫ŒÆœÇ œáŒ±œÅŒ¨œÇ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒ∑œÇ œÄŒ±ŒπŒ¥ŒπŒ∫ŒÆœÇ œáŒ±œÅŒ¨œÇ ŒµŒ¥œé?'}), (b {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'œÄŒøŒªœç Œ∫Œ±ŒªŒÆ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒëŒ∏ŒªŒ∑œÑŒπŒ∫ŒøŒØ œáœéœÅŒøŒπ'}), (b {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ Œ±Œ∏ŒªŒ∑œÑŒπŒ∫ŒøŒØ œáœéœÅŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ Œ±Œ∏ŒªŒ∑œÑŒπŒ∫ŒøŒØ œáœéœÅŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒîŒ∑ŒºœåœÉŒπŒµœÇ œÑŒøœÖŒ±ŒªŒ≠œÑŒµœÇ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ±œÅŒ∫ŒµœÑŒ≠œÇ Œ∫Œ±Œπ Œ∫Œ±Œ∏Œ±œÅŒ≠œÇ œÑŒøœÖŒ±ŒªŒ≠œÑŒµœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ±œÅŒ∫ŒµœÑŒ≠œÇ Œ∫Œ±Œπ Œ∫Œ±Œ∏Œ±œÅŒ≠œÇ œÑŒøœÖŒ±ŒªŒ≠œÑŒµœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†Œ±Œ≥Œ∫Œ¨Œ∫ŒπŒ± Œ∫Œ±Œπ œÉœÑŒ≠Œ≥Œ±œÉœÑœÅŒ±'}), (b {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ± Œ∫Œ±Œπ œÑŒ± œÉœÑŒ≠Œ≥Œ±œÉœÑœÅŒ± ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ± Œ∫Œ±Œπ œÑŒ± œÉœÑŒ≠Œ≥Œ±œÉœÑœÅŒ± ŒµŒ¥œé?'}), (b {minlabel: 'Œ∫Œ±œÑŒµœÉœÑœÅŒ±ŒºŒºŒ≠ŒΩŒ±', maxlabel: 'œÉŒµ Œ∫Œ±ŒªŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ£œÑŒøŒπœáŒµŒØŒ± œÑŒ≠œáŒΩŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ±Œ∫œåœÉŒºŒ∑œÉŒ∑œÇ'}), (b {help: 'œÄ.œá. Œ¨Œ≥Œ±ŒªŒºŒ±, œÉœÖŒΩœÑœÅŒπŒ≤Œ¨ŒΩŒπ, œáœÅœéŒºŒ±œÑŒ±, graffitti', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÑŒ≠œáŒΩŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ±Œ∫œåœÉŒºŒ∑œÉŒ∑œÇ œÉœÑŒø œáœéœÅŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. Œ¨Œ≥Œ±ŒªŒºŒ±, œÉœÖŒΩœÑœÅŒπŒ≤Œ¨ŒΩŒπ, œáœÅœéŒºŒ±œÑŒ±, graffitti', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÑŒ≠œáŒΩŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ±Œ∫œåœÉŒºŒ∑œÉŒ∑œÇ œÉœÑŒø œáœéœÅŒø Œ±œÖœÑœå?'}), (b {minlabel: 'œÄŒøŒªœç Œ¨œÉœáŒ∑ŒºŒ±', maxlabel: 'œÄŒøŒªœç œåŒºŒøœÅœÜŒ±'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒªŒµŒπœÉœÑŒøŒØ œáœéœÅŒøŒπ ŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπŒøœÑŒÆœÑœâŒΩ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥ŒπŒ±Œ∏Œ≠œÉŒπŒºŒøŒπ œáœéœÅŒøŒπ ŒπœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπŒøœÑŒÆœÑœâŒΩ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥ŒπŒ±Œ∏Œ≠œÉŒπŒºŒøŒπ œáœéœÅŒøŒπ ŒπœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπŒøœÑŒÆœÑœâŒΩ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒëŒΩŒ¨Œ≥Œ∫Œ∑ Œ≥ŒπŒ± ŒΩŒ≠ŒµœÇ ŒµŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÉŒµŒπœÇ'}), (b {help: '', value: 'ŒòŒµœâœÅŒµŒØœÇ œåœÑŒπ œáœÅŒµŒπŒ¨Œ∂ŒøŒΩœÑŒ±Œπ ŒΩŒ≠ŒµœÇ ŒµŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÉŒµŒπœÇ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'ŒòŒµœâœÅŒµŒØœÇ œåœÑŒπ œáœÅŒµŒπŒ¨Œ∂ŒøŒΩœÑŒ±Œπ ŒΩŒ≠ŒµœÇ ŒµŒ≥Œ∫Œ±œÑŒ±œÉœÑŒ¨œÉŒµŒπœÇ ŒµŒ¥œé?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ Œ±ŒΩŒ¨Œ≥Œ∫Œ∑', maxlabel: 'ŒºŒµŒ≥Œ¨ŒªŒ∑ Œ±ŒΩŒ¨Œ≥Œ∫Œ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Œó Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± œÄœÅœåœÉŒ≤Œ±œÉŒ∑œÇ Œ∫Œ±Œπ Œ¥ŒπŒ≠ŒªŒµœÖœÉŒ∑œÇ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒ∑ŒΩ œÄœÅŒøœÉŒ≤Œ±œÉŒπŒºœåœÑŒ∑œÑŒ± Œ±œÖœÑŒøœç œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ?'}), (b {minlabel: 'œÄŒøŒªœç Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'œÄŒøŒªœç ŒµœçŒ∫ŒøŒªŒ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'œÄŒøŒªœç Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'œÄŒøŒªœç ŒµœçŒ∫ŒøŒªŒ∑'}), (b {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ œÄœÅŒøœÉŒ≤Œ±œÉŒπŒºœåœÑŒ∑œÑŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ Œ±œÖœÑŒøœç?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ œÄœÅŒøœÉŒ≤Œ±œÉŒπŒºœåœÑŒ∑œÑŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ Œ±œÖœÑŒøœç?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒîŒπŒ¨Œ≤Œ±œÉŒ∑ œÄŒµŒ∂œéŒΩ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ°Œ¨ŒºœÄŒµœÇ Œ∫Œ±Œπ ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± ŒëŒºŒµŒë Œ∫Œ±Œπ Œ∫Œ±œÅœåœÑœÉŒπŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†œÅœåœÉŒ≤Œ±œÉŒ∑ ŒºŒµ œÑŒ± ŒúŒúŒú'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†œÅŒøœÉŒ≤Œ¨œÉŒπŒºŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ§Œ±ŒºœÄŒ≠ŒªŒµœÇ Œ∫Œ±Œπ œÉŒÆŒºŒ±ŒΩœÉŒ∑ œÄœÅŒøœÉŒ±ŒΩŒ±œÑŒøŒªŒπœÉŒºŒøœç'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒïŒØœÉŒøŒ¥ŒøŒπ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†ŒøŒ¥ŒÆŒªŒ±œÑŒø'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'ŒîŒπŒ¨Œ≤Œ±œÉŒ∑ œÄŒµŒ∂œéŒΩ'}), (b {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥ŒπŒ¨Œ≤Œ±œÉŒ∑ œÄŒµŒ∂œéŒΩ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥ŒπŒ¨Œ≤Œ±œÉŒ∑ œÄŒµŒ∂œéŒΩ ŒµŒ¥œé?'}), (b {minlabel: 'Œ∫Œ±Œ∫ŒÆ', maxlabel: 'Œ∫Œ±ŒªŒÆ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ°Œ¨ŒºœÄŒµœÇ Œ∫Œ±Œπ ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± ŒëŒºŒµŒë Œ∫Œ±Œπ Œ∫Œ±œÅœåœÑœÉŒπŒ±'}), (b {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÅŒ¨ŒºœÄŒµœÇ Œ≥ŒπŒ± ŒëŒºŒµŒë œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÅŒ¨ŒºœÄŒµœÇ Œ≥ŒπŒ± ŒëŒºŒµŒë œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†œÅœåœÉŒ≤Œ±œÉŒ∑ ŒºŒµ œÑŒ± ŒúŒúŒú'}), (b {value: 'ŒïŒØŒΩŒ±Œπ ŒµœçŒ∫ŒøŒªŒø ŒΩŒ± Œ≠œÅŒ∏ŒµŒπœÇ ŒºŒµ ŒºŒ≠œÉŒ± ŒºŒ±Œ∂ŒπŒ∫ŒÆœÇ ŒºŒµœÑŒ±œÜŒøœÅŒ¨œÇ?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'ŒïŒØŒΩŒ±Œπ ŒµœçŒ∫ŒøŒªŒø ŒΩŒ± Œ≠œÅŒ∏ŒµŒπœÇ ŒºŒµ ŒºŒ≠œÉŒ± ŒºŒ±Œ∂ŒπŒ∫ŒÆœÇ ŒºŒµœÑŒ±œÜŒøœÅŒ¨œÇ?'}), (b {minlabel: 'œÄŒøŒªœç Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'œÄŒøŒªœç ŒµœçŒ∫ŒøŒªŒ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†œÅŒøœÉŒ≤Œ¨œÉŒπŒºŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ±'}), (b {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± œÄŒµŒ∂ŒøœçœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒ± ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± œÄŒµŒ∂ŒøœçœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'ŒºŒ∑ œÄœÅŒøœÉŒ≤Œ¨œÉŒπŒºŒ±', maxlabel: 'œÄŒªŒÆœÅœâœÇ œÄœÅŒøœÉŒ≤Œ¨œÉŒπŒºŒ±'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ§Œ±ŒºœÄŒ≠ŒªŒµœÇ Œ∫Œ±Œπ œÉŒÆŒºŒ±ŒΩœÉŒ∑ œÄœÅŒøœÉŒ±ŒΩŒ±œÑŒøŒªŒπœÉŒºŒøœç'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ œÑŒ±ŒºœÄŒ≠ŒªŒµœÇ œÄœÅŒøœÉŒ±ŒΩŒ±œÑŒøŒªŒπœÉŒºŒøœç œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ œÑŒ±ŒºœÄŒ≠ŒªŒµœÇ œÄœÅŒøœÉŒ±ŒΩŒ±œÑŒøŒªŒπœÉŒºŒøœç œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒïŒØœÉŒøŒ¥ŒøŒπ'}), (b {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ ŒµŒØœÉŒøŒ¥ŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ ŒµŒØœÉŒøŒ¥ŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†ŒøŒ¥ŒÆŒªŒ±œÑŒø'}), (b {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± Œ≥ŒπŒ± œÄŒøŒ¥ŒÆŒªŒ±œÑŒø ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: '', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒ± Œ≥ŒπŒ± œÄŒøŒ¥ŒÆŒªŒ±œÑŒø ŒµŒ¥œé?'}), (b {minlabel: 'Œ¥œçœÉŒ∫ŒøŒªŒ∑', maxlabel: 'Œ¨ŒΩŒµœÑŒ∑'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'ŒëŒØœÉŒ∏Œ∑ŒºŒ± Œ±œÉœÜŒ¨ŒªŒµŒπŒ±œÇ Œ∫Œ±œÑŒ¨ œÑŒ∑ Œ¥ŒπŒ¨œÅŒ∫ŒµŒπŒ± œÑŒ∑œÇ œÄŒ±œÅŒ±ŒºŒøŒΩŒÆœÇ', value: 'Œ†œåœÉŒø Œ±œÉœÜŒ±ŒªŒ≠œÇ Œ∏ŒµœâœÅŒµŒØœÇ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ Œ±œÉœÜŒ±ŒªŒ≠œÇ', maxlabel: 'œÄŒøŒªœç Œ±œÉœÜŒ±ŒªŒ≠œÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ Œ±œÉœÜŒ±ŒªŒ≠œÇ', maxlabel: 'œÄŒøŒªœç Œ±œÉœÜŒ±ŒªŒ≠œÇ'}), (b {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ Œ±œÉœÜŒ¨ŒªŒµŒπŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒºŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ Œ±œÉœÜŒ¨ŒªŒµŒπŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ¶œâœÑŒπœÉŒºœåœÇ Œ∫Œ±Œπ ŒøœÅŒ±œÑœåœÑŒ∑œÑŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ°Œ¨ŒºœÄŒµœÇ Œ∫Œ±Œπ ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± ŒëŒºŒµŒë Œ∫Œ±Œπ Œ∫Œ±œÅœåœÑœÉŒπŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒëœÄŒøŒºŒøŒΩœâŒºŒ≠ŒΩŒø œÉŒ∑ŒºŒµŒØŒø'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒíŒ±ŒΩŒ¥Œ±ŒªŒπœÉŒºŒøŒØ ŒÆ œÄŒ±œÅŒ±Œ≤Œ±œÑŒπŒ∫œåœÑŒ∑œÑŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒ¨Œ≥Œ∫ŒµŒªŒ± Œ∫Œ±Œπ œÄŒµœÅŒØœÜœÅŒ±ŒæŒ∑'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ¶œçŒªŒ±ŒæŒ∑ œáœéœÅŒøœÖ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ¶œÖœÉŒπŒ∫ŒøŒØ Œ∫ŒØŒΩŒ¥œÖŒΩŒøŒπ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'Œ¶œâœÑŒπœÉŒºœåœÇ Œ∫Œ±Œπ ŒøœÅŒ±œÑœåœÑŒ∑œÑŒ±'}), (b {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œø œÜœâœÑŒπœÉŒºœåœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø, ŒµŒπŒ¥ŒπŒ∫Œ¨ œÑŒø Œ≤œÅŒ¨Œ¥œÖ?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œø œÜœâœÑŒπœÉŒºœåœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø, ŒµŒπŒ¥ŒπŒ∫Œ¨ œÑŒø Œ≤œÅŒ¨Œ¥œÖ?'}), (b {minlabel: 'ŒµŒªŒªŒπœÄŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ°Œ¨ŒºœÄŒµœÇ Œ∫Œ±Œπ ŒºŒøŒΩŒøœÄŒ¨œÑŒπŒ± Œ≥ŒπŒ± ŒëŒºŒµŒë Œ∫Œ±Œπ Œ∫Œ±œÅœåœÑœÉŒπŒ±'}), (b {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÅŒ¨ŒºœÄŒµœÇ Œ≥ŒπŒ± ŒëŒºŒµŒë œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. Œ≥ŒÆœÄŒµŒ¥Œ±', value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ œÅŒ¨ŒºœÄŒµœÇ Œ≥ŒπŒ± ŒëŒºŒµŒë œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒµŒØœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒëœÄŒøŒºŒøŒΩœâŒºŒ≠ŒΩŒø œÉŒ∑ŒºŒµŒØŒø'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ±œÄŒøŒºŒøŒΩœâŒºŒ≠ŒΩŒ± œÉŒ∑ŒºŒµŒØŒ± œÄŒøœÖ ŒΩŒπœéŒ∏ŒµŒπœÇ Œ±ŒΩŒ±œÉœÜŒ¨ŒªŒµŒπŒ±?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ±œÄŒøŒºŒøŒΩœâŒºŒ≠ŒΩŒ± œÉŒ∑ŒºŒµŒØŒ± œÄŒøœÖ ŒΩŒπœéŒ∏ŒµŒπœÇ Œ±ŒΩŒ±œÉœÜŒ¨ŒªŒµŒπŒ±?'}), (b {minlabel: 'œÄŒøŒªŒªŒ¨', maxlabel: 'Œ∫Œ±ŒΩŒ≠ŒΩŒ±'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒíŒ±ŒΩŒ¥Œ±ŒªŒπœÉŒºŒøŒØ ŒÆ œÄŒ±œÅŒ±Œ≤Œ±œÑŒπŒ∫œåœÑŒ∑œÑŒ±'}), (b {value: 'ŒàœáŒµŒπœÇ œÄŒ±œÅŒ±œÑŒ∑œÅŒÆœÉŒµŒπ Œ≤Œ±ŒΩŒ¥Œ±ŒªŒπœÉŒºŒøœçœÇ ŒÆ œÄŒ±œÅŒ±Œ≤Œ±œÑŒπŒ∫œåœÑŒ∑œÑŒ± œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'ŒàœáŒµŒπœÇ œÄŒ±œÅŒ±œÑŒ∑œÅŒÆœÉŒµŒπ Œ≤Œ±ŒΩŒ¥Œ±ŒªŒπœÉŒºŒøœçœÇ ŒÆ œÄŒ±œÅŒ±Œ≤Œ±œÑŒπŒ∫œåœÑŒ∑œÑŒ± œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'œÉœÖœáŒΩŒ¨', maxlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒ¨Œ≥Œ∫ŒµŒªŒ± Œ∫Œ±Œπ œÄŒµœÅŒØœÜœÅŒ±ŒæŒ∑'}), (b {value: 'Œ†œâœÇ ŒµŒØŒΩŒ±Œπ Œ∑ œÄœÅŒøœÉœÑŒ±œÉŒØŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ ŒºŒµ Œ∫Œ¨Œ≥Œ∫ŒµŒªŒ± Œ∫Œ±Œπ œÄŒµœÅŒπœÜœÅŒ¨ŒæŒµŒπœÇ?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œâœÇ ŒµŒØŒΩŒ±Œπ Œ∑ œÄœÅŒøœÉœÑŒ±œÉŒØŒ± œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ ŒºŒµ Œ∫Œ¨Œ≥Œ∫ŒµŒªŒ± Œ∫Œ±Œπ œÄŒµœÅŒπœÜœÅŒ¨ŒæŒµŒπœÇ?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ¶œçŒªŒ±ŒæŒ∑ œáœéœÅŒøœÖ'}), (b {value: 'ŒïŒØŒΩŒ±Œπ ŒµœÄŒ±œÅŒ∫ŒÆœÇ Œ∑ œÜœçŒªŒ±ŒæŒ∑ œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑŒøœç?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'ŒïŒØŒΩŒ±Œπ ŒµœÄŒ±œÅŒ∫ŒÆœÇ Œ∑ œÜœçŒªŒ±ŒæŒ∑ œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑŒøœç?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒÆœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ¶œÖœÉŒπŒ∫ŒøŒØ Œ∫ŒØŒΩŒ¥œÖŒΩŒøŒπ'}), (b {help: 'œÄ.œá. œÄŒøŒπœåœÑŒ∑œÑŒ± œÖœÄŒøŒ¥ŒøŒºœéŒΩ, Œ∫ŒØŒΩŒ∑œÉŒ∑ Œ±œÖœÑŒøŒ∫ŒπŒΩŒÆœÑœâŒΩ Œ∫ŒªœÄ', value: 'Œ§œÄŒ¨œÅœáŒøœÖŒΩ œÜœÖœÉŒπŒ∫ŒøŒØ Œ∫ŒØŒΩŒ¥œÖŒΩŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. œÄŒøŒπœåœÑŒ∑œÑŒ± œÖœÄŒøŒ¥ŒøŒºœéŒΩ, Œ∫ŒØŒΩŒ∑œÉŒ∑ Œ±œÖœÑŒøŒ∫ŒπŒΩŒÆœÑœâŒΩ Œ∫ŒªœÄ', value: 'Œ§œÄŒ¨œÅœáŒøœÖŒΩ œÜœÖœÉŒπŒ∫ŒøŒØ Œ∫ŒØŒΩŒ¥œÖŒΩŒøŒπ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'Œ§Œø œÜœÖœÉŒπŒ∫œå œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ Œ∫Œ±Œπ œÑŒø ŒºŒπŒ∫œÅŒøŒ∫ŒªŒØŒºŒ± œÑŒ∑œÇ œÄŒµœÅŒπŒøœáŒÆœÇ', value: 'Œ†œéœÇ Œ∏Œ± Œ≤Œ±Œ∏ŒºŒøŒªŒøŒ≥ŒøœçœÉŒµœÇ œÑŒø œÜœÖœÉŒπŒ∫œå œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ Œ±œÖœÑŒøœç œÑŒøœÖ œÉŒ∑ŒºŒµŒØŒøœÖ?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫Œ≠œÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫œå'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫Œ≠œÇ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫œå'}), (b {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒø œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒø œÄŒµœÅŒπŒ≤Œ¨ŒªŒªŒøŒΩ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒîŒ≠ŒΩœÑœÅŒ± Œ∫Œ±Œπ œÄœÅŒ¨œÉŒπŒΩŒø'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒóœÅŒµŒºŒØŒ± Œ∫Œ±Œπ Œ∏œåœÅœÖŒ≤ŒøœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ£Œ∫ŒπŒ¨, œÉœÑŒ≠Œ≥Œ±œÉŒ∑ Œ∫Œ±Œπ Œ±ŒµœÅŒπœÉŒºœåœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ, Œ±ŒΩŒ±Œ∫œçŒ∫ŒªœâœÉŒ∑œÇ, Œ∫ŒøŒºœÄŒøœÉœÑŒøœÄŒøŒØŒ∑œÉŒ∑œÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒøŒπŒΩœåœáœÅŒ∑œÉœÑŒøŒπ Œ∫ŒÆœÄŒøŒπ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒëŒΩŒøŒπœáœÑŒøŒØ - Œ∫ŒªŒµŒπœÉœÑŒøŒØ œáœéœÅŒøŒπ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒñœéŒ±'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†œåœÉŒπŒºŒø ŒΩŒµœÅœå'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'ŒîŒ≠ŒΩœÑœÅŒ± Œ∫Œ±Œπ œÄœÅŒ¨œÉŒπŒΩŒø'}), (b {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œ∑ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒøœÖ œÄœÅŒ¨œÉŒπŒΩŒøœÖ Œ∫Œ±Œπ œÑœâŒΩ Œ¥Œ≠ŒΩœÑœÅœâŒΩ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ Œ∑ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑ œÑŒøœÖ œÄœÅŒ¨œÉŒπŒΩŒøœÖ Œ∫Œ±Œπ œÑœâŒΩ Œ¥Œ≠ŒΩœÑœÅœâŒΩ ŒµŒ¥œé?'}), (b {minlabel: 'œÄŒøŒªœç Œ∫Œ±Œ∫ŒÆ', maxlabel: 'œÄŒøŒªœç Œ∫Œ±ŒªŒÆ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒóœÅŒµŒºŒØŒ± Œ∫Œ±Œπ Œ∏œåœÅœÖŒ≤ŒøœÇ'}), (b {value: 'Œ†œåœÉŒø ŒÆœÉœÖœáŒø ŒÆ Œ∏ŒøœÅœÖŒ≤œéŒ¥ŒµœÇ ŒµŒØŒΩŒ±Œπ œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œåœÉŒø ŒÆœÉœÖœáŒø ŒÆ Œ∏ŒøœÅœÖŒ≤œéŒ¥ŒµœÇ ŒµŒØŒΩŒ±Œπ œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {minlabel: 'œÄŒøŒªœç Œ∏ŒøœÅœÖŒ≤œéŒ¥ŒµœÇ', maxlabel: 'œÄŒøŒªœç ŒÆœÉœÖœáŒø'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ£Œ∫ŒπŒ¨, œÉœÑŒ≠Œ≥Œ±œÉŒ∑ Œ∫Œ±Œπ Œ±ŒµœÅŒπœÉŒºœåœÇ'}), (b {help: 'œÄ.œá. œÉŒ∫ŒπŒ¨, Œ¥œÅŒøœÉŒπŒ¨', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒø ŒºŒπŒ∫œÅŒøŒ∫ŒªŒØŒºŒ± ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. œÉŒ∫ŒπŒ¨, Œ¥œÅŒøœÉŒπŒ¨', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ œÑŒø ŒºŒπŒ∫œÅŒøŒ∫ŒªŒØŒºŒ± ŒµŒ¥œé?'}), (b {minlabel: 'œÄŒøŒªœç Œ¥œÖœÉŒ¨œÅŒµœÉœÑŒø', maxlabel: 'œÄŒøŒªœç ŒµœÖœáŒ¨œÅŒπœÉœÑŒø'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ, Œ±ŒΩŒ±Œ∫œçŒ∫ŒªœâœÉŒ∑œÇ, Œ∫ŒøŒºœÄŒøœÉœÑŒøœÄŒøŒØŒ∑œÉŒ∑œÇ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ Œ∫Œ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ Œ∫Œ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒøŒπŒΩœåœáœÅŒ∑œÉœÑŒøŒπ Œ∫ŒÆœÄŒøŒπ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ œÜœçœÑŒµœÖœÉŒ∑œÇ Œ±œÄœå œÑŒøœÖœÇ Œ∫Œ±œÑŒøŒØŒ∫ŒøœÖœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ œÜœçœÑŒµœÖœÉŒ∑œÇ Œ±œÄœå œÑŒøœÖœÇ Œ∫Œ±œÑŒøŒØŒ∫ŒøœÖœÇ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒëŒΩŒøŒπœáœÑŒøŒØ - Œ∫ŒªŒµŒπœÉœÑŒøŒØ œáœéœÅŒøŒπ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒ∑ ŒµŒΩŒ±ŒªŒªŒ±Œ≥ŒÆ Œ±ŒΩŒ¨ŒºŒµœÉŒ± œÉŒµ Œ±ŒΩŒøŒπœáœÑŒøœçœÇ Œ∫Œ±Œπ œÉœÑŒµŒ≥Œ±œÉŒºŒ≠ŒΩŒøœÖœÇ œáœéœÅŒøœÖœÇ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒ∑ ŒµŒΩŒ±ŒªŒªŒ±Œ≥ŒÆ Œ±ŒΩŒ¨ŒºŒµœÉŒ± œÉŒµ Œ±ŒΩŒøŒπœáœÑŒøœçœÇ Œ∫Œ±Œπ œÉœÑŒµŒ≥Œ±œÉŒºŒ≠ŒΩŒøœÖœÇ œáœéœÅŒøœÖœÇ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {minlabel: 'Œ∫Œ±ŒºŒØŒ±', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒñœéŒ±'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµŒªŒµœçŒ∏ŒµœÅŒ± Œ∂œéŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµŒªŒµœçŒ∏ŒµœÅŒ± Œ∂œéŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ∫Œ±ŒΩŒ≠ŒΩŒ±', maxlabel: 'œÄŒøŒªŒªŒ¨'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†œåœÉŒπŒºŒø ŒΩŒµœÅœå'}), (b {value: 'Œ†œâœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ\xa0 œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÄœåœÉŒπŒºŒøœÖ ŒΩŒµœÅŒøœç œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ†œâœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ\xa0 œÖœÄŒøŒ¥ŒøŒºŒ≠œÇ œÄœåœÉŒπŒºŒøœÖ ŒΩŒµœÅŒøœç œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩœçœÄŒ±œÅŒ∫œÑŒµœÇ', maxlabel: 'ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: 'ŒïœÖŒ∫Œ±ŒπœÅŒØŒµœÇ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ Œ∫Œ±Œπ œÉœÖŒΩŒ±ŒΩŒ±œÉœÑœÅŒøœÜŒ≠œÇ', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'Œ∂œâŒΩœÑŒ±ŒΩŒÆ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {minlabel: 'Œ±ŒΩŒµœÄŒ±œÅŒ∫ŒÆœÇ', maxlabel: 'Œ∂œâŒΩœÑŒ±ŒΩŒÆ'}), (b {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'ŒïœÄŒØŒªŒµŒæŒµ ŒπŒ± ŒÆ œÄŒµœÅŒπœÉœÉœåœÑŒµœÅŒµœÇ ŒªŒ≠ŒæŒµŒπœÇ-Œ∫ŒªŒµŒπŒ¥ŒπŒ¨', value: 'Œ†ŒøŒπŒ± œÉœÑŒøŒπœáŒµŒØŒ± œÉœÖŒºŒ≤Œ¨ŒªŒªŒøœÖŒΩ œÉœÑŒ∑ŒΩ Œ≥ŒΩœéŒºŒ∑ œÉŒøœÖ Œ≥ŒπŒ± œÑŒ∑ŒΩ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫ŒÆ Œ∂œâŒÆ œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {atype: 'multicategory'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†ŒøŒ∫ŒπŒªŒØŒ± œáœÅŒ∑œÉœÑœéŒΩ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒîœÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ≥ŒπŒ± œåŒªŒøœÖœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒßœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫Œ≠œÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒöŒ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ, Œ±ŒΩŒ±Œ∫œçŒ∫ŒªœâœÉŒ∑œÇ, Œ∫ŒøŒºœÄŒøœÉœÑŒøœÄŒøŒØŒ∑œÉŒ∑œÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ£Œ∑ŒºŒµŒØŒ± œÑœÖœáŒ±ŒØŒ±œÇ Œ±ŒªŒªŒ∑ŒªŒµœÄŒØŒ¥œÅŒ±œÉŒ∑œÇ Œ∫Œ±Œπ œÉœÖŒΩŒ¨ŒΩœÑŒ∑œÉŒ∑œÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'ŒîœÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ Œ±œÖœÑŒøŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫œéŒΩ ŒøŒºŒ¨Œ¥œâŒΩ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'multicategory'}), (b {atype: 'bool', name: 'Œ†Œ±œÅŒ¨ŒªŒªŒ∑ŒªŒµœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ'}) CREATE (a)-[:TOCHOOSE ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†ŒøŒ∫ŒπŒªŒØŒ± œáœÅŒ∑œÉœÑœéŒΩ'}), (b {help: 'œÄ.œá. œÜœçŒªŒø, Œ∑ŒªŒπŒ∫ŒØŒ±, ŒµŒ∏ŒΩŒπŒ∫œåœÑŒ∑œÑŒ±, œÜœÖœÉŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒøŒπŒ∫ŒøŒΩŒøŒºŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ œÄŒøŒπŒ∫ŒπŒªŒØŒ± œÑœâŒΩ\xa0 œáœÅŒ∑œÉœÑœéŒΩ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. œÜœçŒªŒø, Œ∑ŒªŒπŒ∫ŒØŒ±, ŒµŒ∏ŒΩŒπŒ∫œåœÑŒ∑œÑŒ±, œÜœÖœÉŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒøŒπŒ∫ŒøŒΩŒøŒºŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑', value: 'Œ†œéœÇ Œ∫œÅŒØŒΩŒµŒπœÇ œÑŒ∑ŒΩ œÄŒøŒπŒ∫ŒπŒªŒØŒ± œÑœâŒΩ\xa0 œáœÅŒ∑œÉœÑœéŒΩ œÉŒµ Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ œÄŒøŒπŒ∫ŒπŒªŒØŒ±', maxlabel: 'ŒºŒµŒ≥Œ¨ŒªŒ∑ œÄŒøŒπŒ∫ŒπŒªŒØŒ±'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒîœÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ≥ŒπŒ± œåŒªŒøœÖœÇ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ≥ŒπŒ±\xa0 œåŒªŒøœÖœÇ, Œ±ŒΩŒµŒæŒ¨œÅœÑŒ∑œÑŒ± Œ±œÄœå œÑŒø œÜœçŒªŒø, œÑŒ∑ŒΩ Œ∑ŒªŒπŒ∫ŒØŒ±, œÑŒ∑ŒΩ ŒµŒ∏ŒΩŒπŒ∫œåœÑŒ∑œÑŒ±, œÑŒ∑ŒΩ œÜœÖœÉŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒøŒπŒ∫ŒøŒΩŒøŒºŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ Œ≥ŒπŒ±\xa0 œåŒªŒøœÖœÇ, Œ±ŒΩŒµŒæŒ¨œÅœÑŒ∑œÑŒ± Œ±œÄœå œÑŒø œÜœçŒªŒø, œÑŒ∑ŒΩ Œ∑ŒªŒπŒ∫ŒØŒ±, œÑŒ∑ŒΩ ŒµŒ∏ŒΩŒπŒ∫œåœÑŒ∑œÑŒ±, œÑŒ∑ŒΩ œÜœÖœÉŒπŒ∫ŒÆ Œ∫Œ±Œπ ŒøŒπŒ∫ŒøŒΩŒøŒºŒπŒ∫ŒÆ Œ∫Œ±œÑŒ¨œÉœÑŒ±œÉŒ∑?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒßœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫Œ≠œÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ'}), (b {help: 'œÄ.œá. Œ∫Œ±œÜŒ≠, œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ±', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫Œ≠œÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {help: 'œÄ.œá. Œ∫Œ±œÜŒ≠, œÄŒ±Œ≥Œ∫Œ¨Œ∫ŒπŒ±', value: 'Œ†œéœÇ ŒµŒØŒΩŒ±Œπ ŒøŒπ œáœéœÅŒøŒπ Œ≥ŒπŒ± Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫Œ≠œÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ ŒµŒ¥œé?'}), (b {minlabel: 'œÑŒµŒªŒµŒØœâœÇ Œ±Œ∫Œ±œÑŒ¨ŒªŒªŒ∑ŒªŒøŒπ', maxlabel: 'ŒπŒ¥Œ±ŒΩŒπŒ∫ŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒöŒ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ, Œ±ŒΩŒ±Œ∫œçŒ∫ŒªœâœÉŒ∑œÇ, Œ∫ŒøŒºœÄŒøœÉœÑŒøœÄŒøŒØŒ∑œÉŒ∑œÇ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ Œ∫Œ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ ŒµœÄŒ±œÅŒ∫ŒµŒØœÇ Œ∫Œ¨Œ¥ŒøŒπ œÉŒ∫ŒøœÖœÄŒπŒ¥ŒπœéŒΩ?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒøŒØ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ£Œ∑ŒºŒµŒØŒ± œÑœÖœáŒ±ŒØŒ±œÇ Œ±ŒªŒªŒ∑ŒªŒµœÄŒØŒ¥œÅŒ±œÉŒ∑œÇ Œ∫Œ±Œπ œÉœÖŒΩŒ¨ŒΩœÑŒ∑œÉŒ∑œÇ'}), (b {value: 'ŒòŒµœâœÅŒµŒØœÇ œåœÑŒπ œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå ŒµŒΩŒ∏Œ±œÅœÅœçŒΩŒµŒπ œÑŒπœÇ œÑœÖœáŒ±ŒØŒµœÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ Œ∫Œ±Œπ œÉœÖŒΩŒ±ŒΩŒ±œÉœÑœÅŒøœÜŒ≠œÇ?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'ŒòŒµœâœÅŒµŒØœÇ œåœÑŒπ œÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå ŒµŒΩŒ∏Œ±œÅœÅœçŒΩŒµŒπ œÑŒπœÇ œÑœÖœáŒ±ŒØŒµœÇ œÉœÖŒΩŒ±ŒΩœÑŒÆœÉŒµŒπœÇ Œ∫Œ±Œπ œÉœÖŒΩŒ±ŒΩŒ±œÉœÑœÅŒøœÜŒ≠œÇ?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªœç'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'ŒîœÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ Œ±œÖœÑŒøŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ∫ŒøŒπŒΩœâŒΩŒπŒ∫œéŒΩ ŒøŒºŒ¨Œ¥œâŒΩ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ ŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ¨œÉŒµœâŒΩ Œ∫Œ±Œπ ŒµŒ∫Œ¥Œ∑ŒªœéœÉŒµœâŒΩ Œ±œÄœå ŒøŒºŒ¨Œ¥ŒµœÇ Œ∫Œ±œÑŒøŒØŒ∫œàŒΩ œÉœÑŒø œáœéœÅŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÖŒΩŒ±œÑœåœÑŒ∑œÑŒµœÇ ŒøœÅŒ≥Œ¨ŒΩœâœÉŒ∑œÇ Œ¥œÅŒ¨œÉŒµœâŒΩ Œ∫Œ±Œπ ŒµŒ∫Œ¥Œ∑ŒªœéœÉŒµœâŒΩ Œ±œÄœå ŒøŒºŒ¨Œ¥ŒµœÇ Œ∫Œ±œÑŒøŒØŒ∫œàŒΩ œÉœÑŒø œáœéœÅŒø Œ±œÖœÑœå?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {atype: 'bool', name: 'Œ†Œ±œÅŒ¨ŒªŒªŒ∑ŒªŒµœÇ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ'}), (b {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÄŒøœÖ œÉœÖŒºŒ≤Œ±ŒØŒΩŒøœÖŒΩ œÄŒ±œÅŒ¨ŒªŒªŒ∑ŒªŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}) CREATE (a)-[:FOLLOWEDBY ]->(b);
MATCH (a {value: 'Œ•œÄŒ¨œÅœáŒøœÖŒΩ Œ¥œÅŒ±œÉœÑŒ∑œÅŒπœåœÑŒ∑œÑŒµœÇ œÄŒøœÖ œÉœÖŒºŒ≤Œ±ŒØŒΩŒøœÖŒΩ œÄŒ±œÅŒ¨ŒªŒªŒ∑ŒªŒ± œÉœÑŒø œÉŒ∑ŒºŒµŒØŒø Œ±œÖœÑœå?'}), (b {minlabel: 'Œ∫Œ±Œ∏œåŒªŒøœÖ', maxlabel: 'œÄŒøŒªŒªŒ≠œÇ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {help: ':lower_left_crayon: ŒúœÄŒøœÅŒµŒØœÇ ŒΩŒ± Œ≥œÅŒ¨œàŒµŒπœÇ ŒµœÄŒπœÄŒªŒ≠ŒøŒΩ œÉœáœåŒªŒπŒ±, œÉœÖŒΩŒ±ŒπœÉŒ∏ŒÆŒºŒ±œÑŒ± Œ∫Œ±Œπ œÄŒ±œÅŒ±œÑŒ∑œÅŒÆœÉŒµŒπœÇ.', value: 'ŒòŒ± ŒÆŒ∏ŒµŒªŒµœÇ ŒΩŒ± œÄœÅŒøœÉŒ∏Œ≠œÉŒµŒπœÇ Œ∫Œ¨œÑŒπ Œ±Œ∫œåŒºŒ± Œ≥ŒπŒ± Œ±œÖœÑœå œÑŒø œÉŒ∑ŒºŒµŒØŒø œÄŒøœÖ Œ≤œÅŒØœÉŒ∫ŒµŒπœÇ ŒπŒ¥ŒπŒ±ŒØœÑŒµœÅŒ± Œ∫Œ±Œªœå ŒÆ Œ∫Œ±Œ∫œå?'}), (b {atype: 'comment', value: 'ŒìœÅŒ¨œàŒµ ŒµŒ¥œé œÑŒø œÉœáœåŒªŒπœå œÉŒøœÖ'}) CREATE (a)-[:ISANSWERED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}), (b {name: 'Kalamata'}) CREATE (a)-[:ISSET ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}), (b {value: 'researcher'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}), (b {value: 'tech project manager '}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}), (b {value: 'technical implementation'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}), (b {value: 'project manager'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}), (b {value: 'research assistant'}) CREATE (a)-[:EMPLOYED ]->(b);
MATCH (a {name: 'ŒîŒÆŒºŒøœÇ ŒöŒ±ŒªŒ±ŒºŒ¨œÑŒ±œÇ', link: 'https://www.kalamata.gr'}), (b {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}) CREATE (a)-[:SUPPORTS ]->(b);
MATCH (a {name: '/images/projects/Imagine the Park, Kalamata/1.jpg', caption: 'Launching the City Layers mapping walks, OSE Park Kalamata, Greece. Photo \n¬©Kalamata Municipality'}), (b {end_date: neo4j.time.DateTime(2025, 3, 19, 12, 0, 0, 136000000, tzinfo=pytz.FixedOffset(60)), subtitle: 'Mapping Insights for a Community-Driven Park Regeneration.'}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {lon: 16.371155442085072, lat: 48.2297597806478}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 14, 47, 115000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {lon: 16.3714401, lat: 48.2300156}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 20, 4, 649000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {lon: 16.37096168577437, lat: 48.22980338733629}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 21, 56, 959000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {lon: 16.3712901, lat: 48.2296418}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '50'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 5, 15, 22, 33, 726000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {lon: 10.0, lat: 50.0}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 8, 13, 34, 37, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 15, 16, 16, 1, 782000000, tzinfo=<UTC>)}), (b {lon: 18.083633, lat: 59.313071}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 15, 16, 16, 1, 782000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 15, 16, 16, 1, 782000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2024, 12, 15, 16, 16, 1, 782000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {lon: 16.3528028, lat: 48.1945695}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 12, 10, 449000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {lon: 16.3533739, lat: 48.1956401}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '8'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '3'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '2'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '3'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 14, 10, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {lon: 16.3541356, lat: 48.1978469}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '8'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 18, 16, 57000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '99'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {lon: 16.3537608, lat: 48.1996822}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 25, 16, 68000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {lon: 16.3501286, lat: 48.198333}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '10'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '10'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '2'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 36, 33, 815000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '9'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {lon: 16.3479971, lat: 48.1974992}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 46, 4, 509000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {lon: 16.3438369, lat: 48.1965819}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 16, 56, 43, 987000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 17, 9, 19, 859000000, tzinfo=<UTC>)}), (b {lon: 16.3454451, lat: 48.1952523}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 17, 9, 19, 859000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 17, 9, 19, 859000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 17, 9, 19, 859000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 17, 9, 19, 859000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 9, 17, 9, 19, 859000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {lon: 16.39140458654112, lat: 48.20658637148999}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 14, 12, 7, 2, 369000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {lon: 16.3495189, lat: 48.1929875}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 28, 47, 53000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {lon: 16.3495189, lat: 48.1929875}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 32, 9, 182000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {lon: 16.3495189, lat: 48.1929875}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 15, 10, 36, 4, 907000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.185344}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '38'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 23, 12, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.185344}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '10'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 24, 20, 426000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.185344}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 25, 22, 674000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.185344}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 27, 2, 378000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.185344}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '59'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '9'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 28, 51, 25000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.185344}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 21, 19, 36, 7, 973000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {lon: 16.3494082, lat: 48.1952281}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '49'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 34, 14, 645000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {lon: 16.3494082, lat: 48.1952281}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 39, 6, 221000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {lon: 16.3494082, lat: 48.1952281}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 25, 23, 41, 52, 560000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {lon: 16.3577856, lat: 48.1722368}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 27, 8, 50, 54, 541000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '59'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {lon: 13.040090727572041, lat: 47.822116992137396}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '40'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 28, 8, 8, 12, 351000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {lon: 16.369807500390216, lat: 48.199803006944485}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Plants'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Gardens'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Walking'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Cycling'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 27, 19, 897000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Benches'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 28, 54, 488000000, tzinfo=<UTC>)}), (b {lon: 16.369233398220782, lat: 48.19962080466332}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 28, 54, 488000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 1, 30, 14, 28, 54, 488000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {lon: 16.3494437, lat: 48.192948}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 23, 12, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {lon: 16.3494437, lat: 48.192948}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 2, 18, 25, 55, 453000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '4'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {lon: 16.3494551, lat: 48.1929465}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '99'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 32, 36, 162000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {lon: 16.3494551, lat: 48.1929465}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 34, 35, 916000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {lon: 16.3494551, lat: 48.1929465}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '5'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '4'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '3'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '8'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '99'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 37, 28, 96000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {lon: 16.3494551, lat: 48.1929465}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 40, 13, 89000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {lon: 16.3494551, lat: 48.1929465}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '43'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '3'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 42, 24, 554000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {lon: 16.3494551, lat: 48.1929465}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 3, 17, 46, 2, 601000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {lon: 16.3485862, lat: 48.1895441}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 4, 10, 1, 46, 362000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {lon: 13.0319024, lat: 47.8025611}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '43'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '43'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 5, 14, 18, 2, 114000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.1820672}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 57, 2, 125000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.1820672}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 15, 58, 21, 27000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {lon: 16.351232, lat: 48.1820672}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 10, 18, 53, 11, 829000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {lon: 18.031796, lat: 59.317005}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 19, 20, 12, 42, 179000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 24, 19, 6, 24, 279000000, tzinfo=<UTC>)}), (b {lon: 16.39153540928458, lat: 48.20667303999637}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 24, 19, 6, 24, 279000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 24, 19, 6, 24, 279000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 24, 19, 6, 24, 279000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 24, 19, 6, 24, 279000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 24, 19, 6, 24, 279000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {lon: 16.3494948, lat: 48.1929928}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 40, 14, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {lon: 16.400384, lat: 48.1427456}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 2, 26, 12, 42, 40, 711000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {lon: 16.388119, lat: 48.218788}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 9, 12, 58, 16, 656000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'comment'}) CREATE (a)-[:EVALUATES {value: '\n- not open to public\n- not useable for citizen \n- dead space\n- beautiful trees\n- no interaction just by-passing\n- why is it called a ‚ÄûPlatz‚Äú if it can¬¥t be used as a meeting point\n- i would love to hangout in the middle of the trees \n'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Landmarks'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Plants'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Gardens'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Construction'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wheelchair access'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Benches'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Crosswalks'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {name: '1742225005231.JPG'}), (b {date: neo4j.time.DateTime(2025, 3, 17, 15, 23, 27, 786000000, tzinfo=<UTC>)}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 24, 20, 638000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 24, 20, 638000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 24, 20, 638000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '4'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 17, 15, 24, 20, 638000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 11, 12, 38, 632000000, tzinfo=<UTC>)}), (b {lon: 16.357945507973117, lat: 48.21078294351469}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 11, 12, 38, 632000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 11, 12, 38, 632000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 11, 12, 38, 632000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 11, 12, 38, 632000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 22, 14, 21, 3, 286000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 9, 50, 49, 848000000, tzinfo=<UTC>)}), (b {lon: 16.357985734748418, lat: 48.21077105225776}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 9, 50, 49, 848000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 9, 50, 49, 848000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 9, 50, 49, 848000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 9, 50, 49, 848000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 9, 50, 49, 848000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 10, 48, 4, 637000000, tzinfo=<UTC>)}), (b {lon: 16.3579565, lat: 48.210806}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 10, 48, 4, 637000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 10, 48, 4, 637000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 12, 9, 24, 943000000, tzinfo=<UTC>)}), (b {lon: 16.3579392, lat: 48.2106479}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 12, 9, 24, 943000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 12, 9, 24, 943000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 12, 9, 24, 943000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 13, 40, 14, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 16, 32, 57, 6000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 16, 32, 57, 6000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '49'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 16, 32, 57, 6000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 16, 32, 57, 6000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 16, 32, 57, 6000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 23, 16, 32, 57, 6000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {lon: 16.391474260369627, lat: 48.20655227969873}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 11, 45, 941000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 12, 58, 2000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 12, 58, 2000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 12, 58, 2000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 25, 15, 12, 58, 2000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 26, 21, 27, 49, 510000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 26, 21, 27, 49, 510000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 26, 21, 27, 49, 510000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 26, 21, 27, 49, 510000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 26, 21, 27, 49, 510000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 26, 21, 27, 49, 510000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {lon: 15.966703811186816, lat: 45.812212744685986}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 27, 18, 50, 30, 349000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {lon: 15.95802659698721, lat: 45.81742165078536}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Buildings'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Colors'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Animals'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Voices'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Children'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Walking'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 28, 10, 14, 25, 420000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Cycling'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {lon: 12.058624, lat: 57.6126976}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '40'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 7, 21, 3, 616000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {lon: 16.39140018238004, lat: 48.20654873894287}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 33, 3, 67000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 35, 49, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 37, 18, 896000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {lon: 16.391418001844418, lat: 48.20657322625361}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {atype: 'comment'}) CREATE (a)-[:EVALUATES {value: 'Test Lovro 29.03.2025.'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Buildings'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Water'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Walking'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Cars'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Heat'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 42, 26, 728000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sports'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {atype: 'comment'}) CREATE (a)-[:EVALUATES {value: 'Test Lovro 29.03.2025.'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Buildings'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Water'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Walking'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Cars'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Heat'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 29, 19, 44, 59, 24000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sports'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 16, 2, 192000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 17, 36, 777000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 17, 36, 777000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 17, 36, 777000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 17, 36, 777000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 17, 36, 777000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 3, 31, 14, 17, 36, 777000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {atype: 'comment'}) CREATE (a)-[:EVALUATES {value: 'Liked:\nIt is in the city centre, It is a crowed place\n\nDislked:\nIt is not really green, you can not use it to sit down, it is not usable for the public'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '50'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {name: '1743690776979.JPG'}), (b {date: neo4j.time.DateTime(2025, 4, 3, 14, 32, 58, 333000000, tzinfo=<UTC>)}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {lon: 2.2052864, lat: 41.4121984}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 17, 9, 33, 958000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {lon: 16.4102144, lat: 48.16896}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 8, 51, 556000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 5, 19, 11, 0, 375000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'comment'}) CREATE (a)-[:EVALUATES {value: '- not open to public\n- not useable for citizen\n- dead space\n- beautiful trees\n- no interaction just by-passing\n- why is it called a public place, if it can¬¥t be used as one\n- i would love to hangout in the middle of the trees\n- feel unwelcome\n- can¬¥t tell why there is no access to it\n- coffeebreak under the trees must be great'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Buildings'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Colors'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Street Art'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Smell'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Voices'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Crowds'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wheelchair access'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Benches'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sidewalks'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Public transport'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Animal safety'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Lighting'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Heat'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rain cover'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wind shelter'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Food'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {name: '1743924234529.jpg'}), (b {date: neo4j.time.DateTime(2025, 4, 6, 7, 23, 54, 840000000, tzinfo=<UTC>)}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 6, 7, 38, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {lon: 16.350515122569767, lat: 48.204252778740184}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 12, 21, 391000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 14, 23, 202000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Buildings'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Water'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Walking'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Cars'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Heat'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 11, 26, 40, 787000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sports'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 17, 56, 18, 90000000, tzinfo=<UTC>)}), (b {lon: 2.1364736, lat: 41.3925376}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 17, 56, 18, 90000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 17, 56, 18, 90000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 7, 17, 56, 18, 90000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 49, 45, 95000000, tzinfo=<UTC>)}), (b {lon: 2.13934, lat: 41.3828575}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 49, 45, 95000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 49, 45, 95000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 49, 45, 95000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)}), (b {lon: 2.1394139, lat: 41.3829604}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 52, 55, 658000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)}), (b {lon: 2.1394139, lat: 41.3829604}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 54, 42, 334000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 58, 11, 313000000, tzinfo=<UTC>)}), (b {lon: 2.1394139, lat: 41.3829604}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 58, 11, 313000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 58, 11, 313000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 58, 11, 313000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 5, 58, 11, 313000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 0, 6, 225000000, tzinfo=<UTC>)}), (b {lon: 2.1393624, lat: 41.382882}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 0, 6, 225000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 0, 6, 225000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 0, 6, 225000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 1, 47, 462000000, tzinfo=<UTC>)}), (b {lon: 2.1364736, lat: 41.3892608}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 1, 47, 462000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 1, 47, 462000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 1, 47, 462000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 43, 21, 297000000, tzinfo=<UTC>)}), (b {lon: 2.1393679, lat: 41.3829152}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 43, 21, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 43, 21, 297000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 6, 43, 21, 297000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 10, 55, 696000000, tzinfo=<UTC>)}), (b {lon: 2.1394139, lat: 41.3829604}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 10, 55, 696000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 10, 55, 696000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 10, 55, 696000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 11, 52, 965000000, tzinfo=<UTC>)}), (b {lon: 2.1394139, lat: 41.3829604}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 11, 52, 965000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 11, 52, 965000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 11, 52, 965000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 15, 57, 574000000, tzinfo=<UTC>)}), (b {lon: 16.363449, lat: 48.210033}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 15, 57, 574000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 15, 57, 574000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 7, 15, 57, 574000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 22, 14, 46, 972000000, tzinfo=<UTC>)}), (b {lon: 16.313391245825976, lat: 48.199518466081194}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 22, 14, 46, 972000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 9, 22, 14, 46, 972000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)}), (b {lon: 18.256086094006182, lat: 59.294875028428116}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 6, 27, 3, 258000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {lon: 15.95823769853299, lat: 45.81746277381915}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 14, 58, 38, 851000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {lon: 15.959980506532283, lat: 45.822287359517496}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 15, 0, 8, 151000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {lon: 15.959670056128736, lat: 45.822136354542636}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 26, 41, 569000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {lon: 15.962437037966474, lat: 45.825859932942954}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 36, 50, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {lon: 15.961858034133913, lat: 45.82453034760862}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 17, 48, 3, 772000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {lon: 15.962137865079768, lat: 45.82431336719151}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 12, 19, 42, 44, 386000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 18, 16, 56, 9, 273000000, tzinfo=<UTC>)}), (b {lon: 15.958060096326864, lat: 45.81740480967766}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 18, 16, 56, 9, 273000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 18, 16, 56, 9, 273000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 18, 16, 56, 9, 273000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 18, 16, 56, 9, 273000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 20, 19, 51, 28, 542000000, tzinfo=<UTC>)}), (b {lon: 16.370143614947985, lat: 48.21053364281987}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 20, 19, 51, 28, 542000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 21, 32, 43000000, tzinfo=<UTC>)}), (b {lon: 11.717198680799635, lat: 47.352824383501286}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 21, 32, 43000000, tzinfo=<UTC>)}), (b {atype: 'comment'}) CREATE (a)-[:EVALUATES {value: 'Brunnen soll mit Wasser gef√ºllt werden'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {lon: 11.7162305, lat: 47.3516501}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 6, 29, 4, 580000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {lon: 11.709880828857424, lat: 47.34548207081111}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 7, 41, 56, 76000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 8, 3, 29, 615000000, tzinfo=<UTC>)}), (b {lon: 11.716747283935547, lat: 47.3524313534081}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 8, 3, 29, 615000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '10'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 8, 3, 29, 615000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 23, 8, 3, 29, 615000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 21, 36, 950000000, tzinfo=<UTC>)}), (b {lon: 14.020694808075156, lat: 48.307375783924975}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 21, 36, 950000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 21, 36, 950000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 21, 36, 950000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '54'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 21, 36, 950000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '43'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {lon: 14.02353286743164, lat: 48.30991617804295}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 50, 28, 9000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {lon: 14.023466994527391, lat: 48.309502302231074}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 51, 38, 646000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {lon: 14.02358137169353, lat: 48.309438153264075}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '38'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 25, 676000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '44'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {lon: 14.02095525278212, lat: 48.30763038819679}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 54, 56, 567000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '53'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {lon: 14.023495524167561, lat: 48.30924545429841}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '46'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 55, 14, 968000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {lon: 14.023500680923464, lat: 48.30967399136541}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '49'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '46'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 56, 27, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {lon: 14.023481563574162, lat: 48.309281091368966}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '40'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '52'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '38'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '43'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 28, 8, 57, 12, 145000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {lon: 16.327915191650394, lat: 48.21586595914765}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '53'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '47'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 45, 30, 758000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {lon: 16.29959106445313, lat: 48.2195260664203}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '59'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '52'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '38'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '54'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '46'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 47, 18, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {lon: 16.32728219032288, lat: 48.21527259679771}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '55'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '44'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '38'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 49, 55, 821000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {lon: 16.329631805419925, lat: 48.216094723518204}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '99'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 8, 50, 51, 142000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '98'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 10, 1, 316000000, tzinfo=<UTC>)}), (b {lon: 16.325320577897944, lat: 48.215251149837}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 10, 1, 316000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {lon: 16.32499653652561, lat: 48.21461524560954}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 2, 835000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {lon: 16.32602691650391, lat: 48.21289192931539}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 16, 40, 669000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {lon: 16.323623657226566, lat: 48.214035807386104}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '59'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 17, 31, 413000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {lon: 16.325559219562454, lat: 48.212938399859986}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '40'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '55'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '45'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 24, 840000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {lon: 16.32557637273929, lat: 48.213135417103494}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '44'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 18, 48, 537000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {lon: 16.327850818634037, lat: 48.21591600144106}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '59'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 19, 57, 999000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {lon: 16.36344909667969, lat: 48.21003212234042}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 6, 100000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 51, 912000000, tzinfo=<UTC>)}), (b {lon: 16.32602691650391, lat: 48.21289192931539}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 51, 912000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 51, 912000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 51, 912000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 51, 912000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 51, 912000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {lon: 16.324857703485506, lat: 48.21287024876833}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 20, 59, 240000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {lon: 16.326501667499546, lat: 48.21356932269602}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 21, 9, 170000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {lon: 16.325747057542983, lat: 48.21507091305074}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '54'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '97'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 25, 56, 766000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {lon: 16.325855255126957, lat: 48.21266315063478}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '51'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '8'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '52'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 14, 468000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {lon: 16.32448196411133, lat: 48.21209119946136}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '56'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 27, 31, 727000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {lon: 16.325683593750004, lat: 48.21300631827239}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '54'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '91'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '47'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 29, 10, 37, 22, 981000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {lon: 16.329845264577596, lat: 48.17398486964709}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '47'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 4, 30, 14, 39, 5, 472000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {lon: 14.013803429667831, lat: 48.30778182450183}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '51'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 4, 489000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '53'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {lon: 14.013793772437058, lat: 48.30784676541726}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '50'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 13, 948000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {lon: 14.013737440109255, lat: 48.3079189095742}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '66'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '44'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 18, 763000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {lon: 14.013801813125612, lat: 48.30786103751585}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '6'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '38'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 1, 27, 159000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {lon: 14.013850092887878, lat: 48.30788244565624}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '59'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '3'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '93'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '9'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 9, 57, 602000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {lon: 14.013919830322267, lat: 48.30786103751585}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '6'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 14, 455000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {lon: 14.013919830322267, lat: 48.30786103751585}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '8'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 2, 11, 15, 15, 734000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {lon: 14.016666412353517, lat: 48.301579684942}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '55'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '45'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 34, 14, 332000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {lon: 14.025227508861626, lat: 48.31062245133217}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '51'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '96'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 1, 282000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {lon: 14.016151428222658, lat: 48.30340794911666}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 14, 395000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {lon: 14.016323089599611, lat: 48.303293762253965}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '34'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '58'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '10'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '6'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 25, 789000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {lon: 14.016151428222658, lat: 48.30340794911666}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '10'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '18'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 32, 979000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {lon: 14.025093192543917, lat: 48.31081170818091}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 35, 58, 324000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {lon: 14.015464782714844, lat: 48.30260863571332}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 0, 687000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {lon: 14.014778137207033, lat: 48.30123835504377}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '12'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '20'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '49'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '7'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '88'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 18, 289000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {lon: 14.016151428222658, lat: 48.30317957513581}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '46'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '65'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '92'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '48'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr verwirrend', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 12, 9, 37, 56, 263000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {lon: 16.30142316902446, lat: 48.20477323543262}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '39'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '38'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '60'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 13, 16, 9, 38, 321000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 14, 14, 57, 25, 563000000, tzinfo=<UTC>)}), (b {lon: 16.36344909667969, lat: 48.21003212234042}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 14, 14, 57, 25, 563000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {lon: 14.028415899497936, lat: 48.3021661532684}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '33'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '49'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '90'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '95'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '45'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 11, 8, 10, 46000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {lon: 16.053943634033207, lat: 45.906136000569376}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Colors'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Landmarks'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Plants'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Cleanliness'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Smell'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wind'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Animals'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wheelchair access'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Public transport'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '59'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Heat'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Airflow'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sports'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {name: '1747401021092.jpg'}), (b {date: neo4j.time.DateTime(2025, 5, 16, 13, 10, 21, 534000000, tzinfo=<UTC>)}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {lon: 16.053943634033207, lat: 45.906136000569376}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Colors'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Landmarks'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Plants'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Cleanliness'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Smell'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {minlabel: 'Unpleasant', maxlabel: 'Pleasant'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wind'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Animals'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {minlabel: 'Poor', maxlabel: 'Excellent'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Wheelchair access'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Public transport'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {minlabel: 'Inadequate', maxlabel: 'Adequate'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {minlabel: 'Uncomfortable', maxlabel: 'Comfortable'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Heat'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Humidity'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Airflow'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {minlabel: 'Limited', maxlabel: 'Abundant'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sports'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {name: '1747401513737.jpg'}), (b {date: neo4j.time.DateTime(2025, 5, 16, 13, 18, 34, 248000000, tzinfo=<UTC>)}) CREATE (a)-[:ILLUSTRATED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {lon: 16.325730425369144, lat: 48.21576067407827}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 45, 24, 209000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {lon: 16.327818529192356, lat: 48.21574085320018}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht diverse', maxlabel: 'sehr diverse'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '73'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '70'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 6, 47, 12, 642000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '76'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {lon: 16.4132740025025, lat: 48.174410575409375}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'physische Barrieren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'zahlreich', maxlabel: 'nicht vorhanden'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '31'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '41'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '64'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 21, 16, 24, 13, 895000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 9, 41, 4, 220000000, tzinfo=<UTC>)}), (b {lon: 20.46359067563223, lat: 44.81626554361789}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 9, 41, 4, 220000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 9, 41, 4, 220000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 9, 41, 4, 220000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 9, 41, 4, 220000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '55'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {lon: 16.378340721130375, lat: 48.17389901259449}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '13'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '8'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '14'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '50'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 11, 13, 155000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {lon: 16.399671588248175, lat: 48.2560270287975}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '24'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '25'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '36'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '26'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 17, 39, 625000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '30'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {lon: 16.374971778378963, lat: 48.17540149025967}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '78'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '89'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '94'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '74'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '77'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 22, 13, 43, 2, 654000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {lon: -98.4973312, lat: 29.4125568}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Physische Schutzma√ünahmen wie zB Z√§une und Tore?'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 5, 30, 20, 42, 8, 331000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Diversit√§t der NutzerInnen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 54, 52, 868000000, tzinfo=<UTC>)}), (b {lon: 16.40413366129111, lat: 48.25335004660456}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 54, 52, 868000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '16'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 54, 52, 868000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 54, 52, 868000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '1'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)}), (b {lon: 16.383469340043366, lat: 48.26025568348867}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 55, 44, 93000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '0'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {lon: 16.404819488525394, lat: 48.25340894480991}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '72'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '62'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '67'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 12, 59, 6, 672000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '81'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {lon: 16.404622394660326, lat: 48.25320535012363}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kosten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'Viel zu Teuer', maxlabel: 'kostenlos'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '84'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 13, 13, 0, 39, 841000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {lon: 16.31143673216106, lat: 48.212357413134775}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '28'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fu√üg√§nger√ºberwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich vorhanden'}) CREATE (a)-[:EVALUATES {value: '27'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'zu wenig', maxlabel: 'optimal'}) CREATE (a)-[:EVALUATES {value: '49'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht breit genug', maxlabel: 'sehr breit'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '80'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'unzureichend', maxlabel: 'umfassend'}) CREATE (a)-[:EVALUATES {value: '61'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'vielf√§ltige Nutzungsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr gering', maxlabel: 'sehr hoch'}) CREATE (a)-[:EVALUATES {value: '42'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'soziale Aktivit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '29'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '57'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 15, 38, 29, 200000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '22'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {lon: 16.338708400726322, lat: 48.19629153766969}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Breite der Fu√üg√§ngerwege'}) CREATE (a)-[:EVALUATES {value: False}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '82'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '35'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '21'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '69'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 16, 21, 35, 352000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '86'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {lon: 16.33752822875977, lat: 48.198705718192045}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '75'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beleuchtung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Pr√§senz der Menschen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht', maxlabel: 'voll'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht zug√§nglich', maxlabel: 'vollkommen zug√§nglich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Rampen und Aufz√ºge'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '83'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Treppen und stufenlose Bewegung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'zahlreich'}) CREATE (a)-[:EVALUATES {value: '87'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Beschilderung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '40'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Fahrradwege'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '37'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht inklusiv', maxlabel: 'absolut inklusiv'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Anwesenheit verschiedener Personengruppen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr einheitlich', maxlabel: 'sehr unterschiedlich'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Menschen mit Behinderungen'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Kulturelle Sensibilit√§t'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: '√ºberhaupt nicht sensibel', maxlabel: 'sehr sensibel'}) CREATE (a)-[:EVALUATES {value: '63'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Kinder/Familien'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einrichtungen f√ºr Senioren'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '17'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sauberkeit'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schmutzig', maxlabel: 'sehr sauber'}) CREATE (a)-[:EVALUATES {value: '15'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Natur und Gr√ºnraum'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'keine', maxlabel: 'viele'}) CREATE (a)-[:EVALUATES {value: '23'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Stadtm√∂bel'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'reichlich'}) CREATE (a)-[:EVALUATES {value: '32'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Sinneserfahrung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '19'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unangenehm', maxlabel: 'sehr angenehm'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'multimodale Zugangsm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '71'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√ñffentliche Verkehrsmittel in der N√§he'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr weit', maxlabel: 'sehr hier'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'nachhaltige Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'ausreichend'}) CREATE (a)-[:EVALUATES {value: '68'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Einfaches Umsteigen zwischen √∂ffentlichen Verkehrsmitteln'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr schwierig', maxlabel: 'sehr einfach'}) CREATE (a)-[:EVALUATES {value: '100'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Bequemlichkeit der Transportm√∂glichkeiten'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'sehr unbequem', maxlabel: 'sehr bequem'}) CREATE (a)-[:EVALUATES {value: '79'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 22, 17, 48, 19, 565000000, tzinfo=<UTC>)}), (b {minlabel: 'nicht vorhanden', maxlabel: 'sehr gut'}) CREATE (a)-[:EVALUATES {value: '11'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 24, 13, 13, 25, 626000000, tzinfo=<UTC>)}), (b {lon: 16.39142990112305, lat: 48.20665734468688}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 24, 13, 13, 25, 626000000, tzinfo=<UTC>)}), (b {minlabel: 'absolut unsicher', maxlabel: 'absolut sicher'}) CREATE (a)-[:EVALUATES {value: '85'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 6, 24, 13, 13, 25, 626000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: '√úberwachung'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 10, 15, 14, 32, 14, 379000000, tzinfo=<UTC>)}), (b {lon: 18.0324667, lat: 59.3173412}) CREATE (a)-[:REGISTERED ]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 10, 15, 14, 32, 14, 379000000, tzinfo=<UTC>)}), (b {atype: 'comment'}) CREATE (a)-[:EVALUATES {value: 'Hornstull √§r vackert'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 10, 15, 14, 32, 14, 379000000, tzinfo=<UTC>)}), (b {minlabel: 'Unattractive', maxlabel: 'Beautiful'}) CREATE (a)-[:EVALUATES {value: '99'}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 10, 15, 14, 32, 14, 379000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Buildings'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 10, 15, 14, 32, 14, 379000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Trees'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
MATCH (a {date: neo4j.time.DateTime(2025, 10, 15, 14, 32, 14, 379000000, tzinfo=<UTC>)}), (b {atype: 'bool', name: 'Water'}) CREATE (a)-[:EVALUATES {value: True}]->(b);
